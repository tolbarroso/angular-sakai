{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NodeService {\n  constructor(http) {\n    this.http = http;\n  }\n  getFiles() {\n    return this.http.get('assets/demo/data/files.json').toPromise().then(res => res.data);\n  }\n  getLazyFiles() {\n    return this.http.get('assets/demo/data/files-lazy.json').toPromise().then(res => res.data);\n  }\n  getFilesystem() {\n    return this.http.get('assets/demo/data/filesystem.json').toPromise().then(res => res.data);\n  }\n  getLazyFilesystem() {\n    return this.http.get('assets/demo/data/filesystem-lazy.json').toPromise().then(res => res.data);\n  }\n  static #_ = this.ɵfac = function NodeService_Factory(t) {\n    return new (t || NodeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NodeService,\n    factory: NodeService.ɵfac\n  });\n}","map":{"version":3,"names":["NodeService","constructor","http","getFiles","get","toPromise","then","res","data","getLazyFiles","getFilesystem","getLazyFilesystem","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["/workspace/angular-sakai/src/app/demo/service/node.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\n\n@Injectable()\nexport class NodeService {\n\n    constructor(private http: HttpClient) { }\n\n    getFiles() {\n        return this.http.get<any>('assets/demo/data/files.json')\n            .toPromise()\n            .then(res => res.data as TreeNode[]);\n    }\n\n    getLazyFiles() {\n        return this.http.get<any>('assets/demo/data/files-lazy.json')\n            .toPromise()\n            .then(res => res.data as TreeNode[]);\n    }\n\n    getFilesystem() {\n        return this.http.get<any>('assets/demo/data/filesystem.json')\n            .toPromise()\n            .then(res => res.data as TreeNode[]);\n    }\n\n    getLazyFilesystem() {\n        return this.http.get<any>('assets/demo/data/filesystem-lazy.json')\n            .toPromise()\n            .then(res => res.data as TreeNode[]);\n    }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,WAAW;EAEpBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,6BAA6B,CAAC,CACnDC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAkB,CAAC;EAC5C;EAEAC,YAAYA,CAAA;IACR,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAM,kCAAkC,CAAC,CACxDC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAkB,CAAC;EAC5C;EAEAE,aAAaA,CAAA;IACT,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAM,kCAAkC,CAAC,CACxDC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAkB,CAAC;EAC5C;EAEAG,iBAAiBA,CAAA;IACb,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAAM,uCAAuC,CAAC,CAC7DC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAkB,CAAC;EAC5C;EAAC,QAAAI,CAAA,G;qBA1BQZ,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXjB,WAAW;IAAAkB,OAAA,EAAXlB,WAAW,CAAAmB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}