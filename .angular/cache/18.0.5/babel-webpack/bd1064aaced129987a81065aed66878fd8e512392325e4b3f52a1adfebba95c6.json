{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport * as i3 from '@angular/fire/app-check';\nimport { ɵfirebaseAppFactory as _firebaseAppFactory, ɵcacheInstance as _cacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport * as i2 from '@angular/fire/compat/auth';\nimport { ɵauthFactory as _authFactory, USE_EMULATOR as USE_EMULATOR$1, SETTINGS, TENANT_ID, LANGUAGE_CODE, USE_DEVICE_LANGUAGE, PERSISTENCE } from '@angular/fire/compat/auth';\nimport { map, share, scan, withLatestFrom, skipWhile, switchMap, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable, asyncScheduler, merge, of } from 'rxjs';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport firebase from 'firebase/compat/app';\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n  return new Observable(subscriber => {\n    let fn = null;\n    fn = ref[listenType](event, (snapshot, prevKey) => {\n      scheduler.schedule(() => {\n        subscriber.next({\n          snapshot,\n          prevKey\n        });\n      });\n      if (listenType === 'once') {\n        scheduler.schedule(() => subscriber.complete());\n      }\n    }, err => {\n      scheduler.schedule(() => subscriber.error(err));\n    });\n    if (listenType === 'on') {\n      return {\n        unsubscribe() {\n          if (fn != null) {\n            ref.off(event, fn);\n          }\n        }\n      };\n    } else {\n      return {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        unsubscribe() {}\n      };\n    }\n  }).pipe(map(payload => {\n    const {\n      snapshot,\n      prevKey\n    } = payload;\n    let key = null;\n    if (snapshot.exists()) {\n      key = snapshot.key;\n    }\n    return {\n      type: event,\n      payload: snapshot,\n      prevKey,\n      key\n    };\n  }), share());\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction isFirebaseDataSnapshot(value) {\n  return typeof value.exportVal === 'function';\n}\nfunction isNil(obj) {\n  return obj === undefined || obj === null;\n}\nfunction isFirebaseRef(value) {\n  return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nfunction getRef(database, pathRef) {\n  // if a db ref was passed in, just return it\n  return isFirebaseRef(pathRef) ? pathRef : database.ref(pathRef);\n}\nfunction checkOperationCases(item, cases) {\n  if (isString(item)) {\n    return cases.stringCase();\n  } else if (isFirebaseRef(item)) {\n    return cases.firebaseCase();\n  } else if (isFirebaseDataSnapshot(item)) {\n    return cases.snapshotCase();\n  }\n  throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\nfunction validateEventsArray(events) {\n  if (isNil(events) || events.length === 0) {\n    events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n  }\n  return events;\n}\nfunction stateChanges(query, events, scheduler) {\n  events = validateEventsArray(events);\n  const childEvent$ = events.map(event => fromRef(query, event, 'on', scheduler));\n  return merge(...childEvent$);\n}\nfunction auditTrail(query, events, scheduler) {\n  const auditTrail$ = stateChanges(query, events).pipe(scan((current, action) => [...current, action], []));\n  return waitForLoaded(query, auditTrail$, scheduler);\n}\nfunction loadedData(query, scheduler) {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef(query, 'value', 'on', scheduler).pipe(map(data => {\n    // Store the last key in the data set\n    let lastKeyToLoad;\n    // Loop through loaded dataset to find the last key\n    data.payload.forEach(child => {\n      lastKeyToLoad = child.key;\n      return false;\n    });\n    // return data set and the current last key loaded\n    return {\n      data,\n      lastKeyToLoad\n    };\n  }));\n}\nfunction waitForLoaded(query, action$, scheduler) {\n  const loaded$ = loadedData(query, scheduler);\n  return loaded$.pipe(withLatestFrom(action$),\n  // Get the latest values from the \"loaded\" and \"child\" datasets\n  // We can use both datasets to form an array of the latest values.\n  map(([loaded, actions]) => {\n    // Store the last key in the data set\n    const lastKeyToLoad = loaded.lastKeyToLoad;\n    // Store all child keys loaded at this point\n    const loadedKeys = actions.map(snap => snap.key);\n    return {\n      actions,\n      lastKeyToLoad,\n      loadedKeys\n    };\n  }),\n  // This is the magical part, only emit when the last load key\n  // in the dataset has been loaded by a child event. At this point\n  // we can assume the dataset is \"whole\".\n  skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1),\n  // Pluck off the meta data because the user only cares\n  // to iterate through the snapshots\n  map(meta => meta.actions));\n}\nfunction createDataOperationMethod(ref, operation) {\n  return function dataOperation(item, value) {\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item)[operation](value),\n      firebaseCase: () => item[operation](value),\n      snapshotCase: () => item.ref[operation](value)\n    });\n  };\n}\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nfunction createRemoveMethod(ref) {\n  return function remove(item) {\n    if (!item) {\n      return ref.remove();\n    }\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item).remove(),\n      firebaseCase: () => item.remove(),\n      snapshotCase: () => item.ref.remove()\n    });\n  };\n}\nfunction listChanges(ref, events, scheduler) {\n  return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n    const childEvent$ = [of(snapshotAction)];\n    events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n    return merge(...childEvent$).pipe(scan(buildView, []));\n  }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n  const len = changes.length;\n  for (let i = 0; i < len; i++) {\n    if (changes[i].payload.key === key) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction positionAfter(changes, prevKey) {\n  if (isNil(prevKey)) {\n    return 0;\n  } else {\n    const i = positionFor(changes, prevKey);\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\nfunction buildView(current, action) {\n  const {\n    payload,\n    prevKey,\n    key\n  } = action;\n  const currentKeyPosition = positionFor(current, key);\n  const afterPreviousKeyPosition = positionAfter(current, prevKey);\n  switch (action.type) {\n    case 'value':\n      if (action.payload?.exists()) {\n        let prevKey = null;\n        action.payload.forEach(payload => {\n          const action = {\n            payload,\n            type: 'value',\n            prevKey,\n            key: payload.key\n          };\n          prevKey = payload.key;\n          current = [...current, action];\n          return false;\n        });\n      }\n      return current;\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        const previous = current[currentKeyPosition - 1];\n        if ((previous?.key || null) !== prevKey) {\n          current = current.filter(x => x.payload.key !== payload.key);\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action, ...current];\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n      return current;\n    case 'child_removed':\n      return current.filter(x => x.payload.key !== payload.key);\n    case 'child_changed':\n      return current.map(x => x.payload.key === key ? action : x);\n    case 'child_moved':\n      if (currentKeyPosition > -1) {\n        const data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n      return current;\n    // default will also remove null results\n    default:\n      return current;\n  }\n}\nfunction snapshotChanges(query, events, scheduler) {\n  events = validateEventsArray(events);\n  return listChanges(query, events, scheduler);\n}\nfunction createListReference(query, afDatabase) {\n  const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n  const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n  return {\n    query,\n    update: createDataOperationMethod(refInZone, 'update'),\n    set: createDataOperationMethod(refInZone, 'set'),\n    push: data => refInZone.push(data),\n    remove: createRemoveMethod(refInZone),\n    snapshotChanges(events) {\n      return snapshotChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n    stateChanges(events) {\n      return stateChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n    auditTrail(events) {\n      return auditTrail(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n    valueChanges(events, options) {\n      const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n      return snapshotChanges$.pipe(map(actions => actions.map(a => {\n        if (options && options.idField) {\n          return {\n            ...a.payload.val(),\n            ...{\n              [options.idField]: a.key\n            }\n          };\n        } else {\n          return a.payload.val();\n        }\n      })), keepUnstableUntilFirst);\n    }\n  };\n}\nfunction createObjectSnapshotChanges(query, scheduler) {\n  return function snapshotChanges() {\n    return fromRef(query, 'value', 'on', scheduler);\n  };\n}\nfunction createObjectReference(query, afDatabase) {\n  return {\n    query,\n    snapshotChanges() {\n      return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(keepUnstableUntilFirst);\n    },\n    update(data) {\n      return query.ref.update(data);\n    },\n    set(data) {\n      return query.ref.set(data);\n    },\n    remove() {\n      return query.ref.remove();\n    },\n    valueChanges() {\n      const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n      return snapshotChanges$.pipe(keepUnstableUntilFirst, map(action => action.payload.exists() ? action.payload.val() : null));\n    }\n  };\n}\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nconst USE_EMULATOR = new InjectionToken('angularfire2.database.use-emulator');\nclass AngularFireDatabase {\n  schedulers;\n  database;\n  constructor(options, name, databaseURL,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  platformId, zone, schedulers, _useEmulator,\n  // tuple isn't working here\n  auth, useAuthEmulator, authSettings,\n  // can't use firebase.auth.AuthSettings here\n  tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n    this.schedulers = schedulers;\n    const useEmulator = _useEmulator;\n    const app = _firebaseAppFactory(options, zone, name);\n    if (auth) {\n      _authFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n    }\n    this.database = _cacheInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app.name, () => {\n      const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n      if (useEmulator) {\n        database.useEmulator(...useEmulator);\n      }\n      return database;\n    }, [useEmulator]);\n  }\n  list(pathOrRef, queryFn) {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    let query = ref;\n    if (queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference(query, this);\n  }\n  object(pathOrRef) {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    return createObjectReference(ref, this);\n  }\n  createPushId() {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n    return ref.push().key;\n  }\n  static ɵfac = function AngularFireDatabase_Factory(t) {\n    return new (t || AngularFireDatabase)(i0.ɵɵinject(FIREBASE_OPTIONS), i0.ɵɵinject(FIREBASE_APP_NAME, 8), i0.ɵɵinject(URL, 8), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ɵAngularFireSchedulers), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(i2.AngularFireAuth, 8), i0.ɵɵinject(USE_EMULATOR$1, 8), i0.ɵɵinject(SETTINGS, 8), i0.ɵɵinject(TENANT_ID, 8), i0.ɵɵinject(LANGUAGE_CODE, 8), i0.ɵɵinject(USE_DEVICE_LANGUAGE, 8), i0.ɵɵinject(PERSISTENCE, 8), i0.ɵɵinject(i3.AppCheckInstances, 8));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AngularFireDatabase,\n    factory: AngularFireDatabase.ɵfac,\n    providedIn: 'any'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireDatabase, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [FIREBASE_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [FIREBASE_APP_NAME]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [URL]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.ɵAngularFireSchedulers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR]\n    }]\n  }, {\n    type: i2.AngularFireAuth,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR$1]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [SETTINGS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TENANT_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [LANGUAGE_CODE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_DEVICE_LANGUAGE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [PERSISTENCE]\n    }]\n  }, {\n    type: i3.AppCheckInstances,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\nclass AngularFireDatabaseModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'rtdb-compat');\n  }\n  static ɵfac = function AngularFireDatabaseModule_Factory(t) {\n    return new (t || AngularFireDatabaseModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AngularFireDatabaseModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [AngularFireDatabase]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireDatabaseModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFireDatabase]\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, USE_EMULATOR, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };","map":{"version":3,"names":["i0","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","NgModule","i1","keepUnstableUntilFirst","VERSION","i3","ɵfirebaseAppFactory","_firebaseAppFactory","ɵcacheInstance","_cacheInstance","FIREBASE_OPTIONS","FIREBASE_APP_NAME","i2","ɵauthFactory","_authFactory","USE_EMULATOR","USE_EMULATOR$1","SETTINGS","TENANT_ID","LANGUAGE_CODE","USE_DEVICE_LANGUAGE","PERSISTENCE","map","share","scan","withLatestFrom","skipWhile","switchMap","distinctUntilChanged","Observable","asyncScheduler","merge","of","firebase","fromRef","ref","event","listenType","scheduler","subscriber","fn","snapshot","prevKey","schedule","next","complete","err","error","unsubscribe","off","pipe","payload","key","exists","type","isString","value","isFirebaseDataSnapshot","exportVal","isNil","obj","undefined","isFirebaseRef","set","getRef","database","pathRef","checkOperationCases","item","cases","stringCase","firebaseCase","snapshotCase","Error","validateEventsArray","events","length","stateChanges","query","childEvent$","auditTrail","auditTrail$","current","action","waitForLoaded","loadedData","data","lastKeyToLoad","forEach","child","action$","loaded$","loaded","actions","loadedKeys","snap","meta","indexOf","createDataOperationMethod","operation","dataOperation","createRemoveMethod","remove","listChanges","snapshotAction","push","buildView","positionFor","changes","len","i","positionAfter","currentKeyPosition","afterPreviousKeyPosition","previous","filter","x","splice","slice","snapshotChanges","createListReference","afDatabase","outsideAngularScheduler","schedulers","outsideAngular","refInZone","ngZone","run","update","valueChanges","options","snapshotChanges$","a","idField","val","createObjectSnapshotChanges","createObjectReference","URL","AngularFireDatabase","constructor","name","databaseURL","platformId","zone","_useEmulator","auth","useAuthEmulator","authSettings","tenantId","languageCode","useDeviceLanguage","persistence","_appCheckInstances","useEmulator","app","runOutsideAngular","list","pathOrRef","queryFn","object","createPushId","ɵfac","AngularFireDatabase_Factory","t","ɵɵinject","NgZone","ɵAngularFireSchedulers","AngularFireAuth","AppCheckInstances","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","args","decorators","Object","AngularFireDatabaseModule","registerVersion","full","AngularFireDatabaseModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers"],"sources":["/workspace/angular-sakai/node_modules/@angular/fire/fesm2022/angular-fire-compat-database.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport * as i3 from '@angular/fire/app-check';\nimport { ɵfirebaseAppFactory as _firebaseAppFactory, ɵcacheInstance as _cacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport * as i2 from '@angular/fire/compat/auth';\nimport { ɵauthFactory as _authFactory, USE_EMULATOR as USE_EMULATOR$1, SETTINGS, TENANT_ID, LANGUAGE_CODE, USE_DEVICE_LANGUAGE, PERSISTENCE } from '@angular/fire/compat/auth';\nimport { map, share, scan, withLatestFrom, skipWhile, switchMap, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable, asyncScheduler, merge, of } from 'rxjs';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport firebase from 'firebase/compat/app';\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n    return new Observable(subscriber => {\n        let fn = null;\n        fn = ref[listenType](event, (snapshot, prevKey) => {\n            scheduler.schedule(() => {\n                subscriber.next({ snapshot, prevKey });\n            });\n            if (listenType === 'once') {\n                scheduler.schedule(() => subscriber.complete());\n            }\n        }, err => {\n            scheduler.schedule(() => subscriber.error(err));\n        });\n        if (listenType === 'on') {\n            return {\n                unsubscribe() {\n                    if (fn != null) {\n                        ref.off(event, fn);\n                    }\n                }\n            };\n        }\n        else {\n            return {\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                unsubscribe() {\n                }\n            };\n        }\n    }).pipe(map(payload => {\n        const { snapshot, prevKey } = payload;\n        let key = null;\n        if (snapshot.exists()) {\n            key = snapshot.key;\n        }\n        return { type: event, payload: snapshot, prevKey, key };\n    }), share());\n}\n\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nfunction isNil(obj) {\n    return obj === undefined || obj === null;\n}\nfunction isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nfunction getRef(database, pathRef) {\n    // if a db ref was passed in, just return it\n    return isFirebaseRef(pathRef) ? pathRef\n        : database.ref(pathRef);\n}\nfunction checkOperationCases(item, cases) {\n    if (isString(item)) {\n        return cases.stringCase();\n    }\n    else if (isFirebaseRef(item)) {\n        return cases.firebaseCase();\n    }\n    else if (isFirebaseDataSnapshot(item)) {\n        return cases.snapshotCase();\n    }\n    throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n\nfunction validateEventsArray(events) {\n    if (isNil(events) || events.length === 0) {\n        events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n    }\n    return events;\n}\n\nfunction stateChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    const childEvent$ = events.map(event => fromRef(query, event, 'on', scheduler));\n    return merge(...childEvent$);\n}\n\nfunction auditTrail(query, events, scheduler) {\n    const auditTrail$ = stateChanges(query, events)\n        .pipe(scan((current, action) => [...current, action], []));\n    return waitForLoaded(query, auditTrail$, scheduler);\n}\nfunction loadedData(query, scheduler) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, 'value', 'on', scheduler)\n        .pipe(map(data => {\n        // Store the last key in the data set\n        let lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.payload.forEach(child => {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        // return data set and the current last key loaded\n        return { data, lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, action$, scheduler) {\n    const loaded$ = loadedData(query, scheduler);\n    return loaded$\n        .pipe(withLatestFrom(action$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map(([loaded, actions]) => {\n        // Store the last key in the data set\n        const lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        const loadedKeys = actions.map(snap => snap.key);\n        return { actions, lastKeyToLoad, loadedKeys };\n    }), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map(meta => meta.actions));\n}\n\nfunction createDataOperationMethod(ref, operation) {\n    return function dataOperation(item, value) {\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item)[operation](value),\n            firebaseCase: () => item[operation](value),\n            snapshotCase: () => item.ref[operation](value)\n        });\n    };\n}\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nfunction createRemoveMethod(ref) {\n    return function remove(item) {\n        if (!item) {\n            return ref.remove();\n        }\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item).remove(),\n            firebaseCase: () => item.remove(),\n            snapshotCase: () => item.ref.remove()\n        });\n    };\n}\n\nfunction listChanges(ref, events, scheduler) {\n    return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n        const childEvent$ = [of(snapshotAction)];\n        events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n        return merge(...childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n    const len = changes.length;\n    for (let i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        const i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, action) {\n    const { payload, prevKey, key } = action;\n    const currentKeyPosition = positionFor(current, key);\n    const afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload?.exists()) {\n                let prevKey = null;\n                action.payload.forEach(payload => {\n                    const action = { payload, type: 'value', prevKey, key: payload.key };\n                    prevKey = payload.key;\n                    current = [...current, action];\n                    return false;\n                });\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                const previous = current[currentKeyPosition - 1];\n                if ((previous?.key || null) !== prevKey) {\n                    current = current.filter(x => x.payload.key !== payload.key);\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action, ...current];\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter(x => x.payload.key !== payload.key);\n        case 'child_changed':\n            return current.map(x => x.payload.key === key ? action : x);\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                const data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n\nfunction snapshotChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    return listChanges(query, events, scheduler);\n}\n\nfunction createListReference(query, afDatabase) {\n    const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n    const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n    return {\n        query,\n        update: createDataOperationMethod(refInZone, 'update'),\n        set: createDataOperationMethod(refInZone, 'set'),\n        push: (data) => refInZone.push(data),\n        remove: createRemoveMethod(refInZone),\n        snapshotChanges(events) {\n            return snapshotChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        stateChanges(events) {\n            return stateChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        auditTrail(events) {\n            return auditTrail(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        valueChanges(events, options) {\n            const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n            return snapshotChanges$.pipe(map(actions => actions.map(a => {\n                if (options && options.idField) {\n                    return {\n                        ...a.payload.val(),\n                        ...{\n                            [options.idField]: a.key\n                        }\n                    };\n                }\n                else {\n                    return a.payload.val();\n                }\n            })), keepUnstableUntilFirst);\n        }\n    };\n}\n\nfunction createObjectSnapshotChanges(query, scheduler) {\n    return function snapshotChanges() {\n        return fromRef(query, 'value', 'on', scheduler);\n    };\n}\n\nfunction createObjectReference(query, afDatabase) {\n    return {\n        query,\n        snapshotChanges() {\n            return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(keepUnstableUntilFirst);\n        },\n        update(data) { return query.ref.update(data); },\n        set(data) { return query.ref.set(data); },\n        remove() { return query.ref.remove(); },\n        valueChanges() {\n            const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n            return snapshotChanges$.pipe(keepUnstableUntilFirst, map(action => action.payload.exists() ? action.payload.val() : null));\n        },\n    };\n}\n\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nconst USE_EMULATOR = new InjectionToken('angularfire2.database.use-emulator');\nclass AngularFireDatabase {\n    schedulers;\n    database;\n    constructor(options, name, databaseURL, \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    platformId, zone, schedulers, _useEmulator, // tuple isn't working here\n    auth, useAuthEmulator, authSettings, // can't use firebase.auth.AuthSettings here\n    tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n        this.schedulers = schedulers;\n        const useEmulator = _useEmulator;\n        const app = _firebaseAppFactory(options, zone, name);\n        if (auth) {\n            _authFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n        }\n        this.database = _cacheInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app.name, () => {\n            const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n            if (useEmulator) {\n                database.useEmulator(...useEmulator);\n            }\n            return database;\n        }, [useEmulator]);\n    }\n    list(pathOrRef, queryFn) {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n        let query = ref;\n        if (queryFn) {\n            query = queryFn(ref);\n        }\n        return createListReference(query, this);\n    }\n    object(pathOrRef) {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n        return createObjectReference(ref, this);\n    }\n    createPushId() {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n        return ref.push().key;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: AngularFireDatabase, deps: [{ token: FIREBASE_OPTIONS }, { token: FIREBASE_APP_NAME, optional: true }, { token: URL, optional: true }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: i1.ɵAngularFireSchedulers }, { token: USE_EMULATOR, optional: true }, { token: i2.AngularFireAuth, optional: true }, { token: USE_EMULATOR$1, optional: true }, { token: SETTINGS, optional: true }, { token: TENANT_ID, optional: true }, { token: LANGUAGE_CODE, optional: true }, { token: USE_DEVICE_LANGUAGE, optional: true }, { token: PERSISTENCE, optional: true }, { token: i3.AppCheckInstances, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: AngularFireDatabase, providedIn: 'any' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: AngularFireDatabase, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'any'\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [FIREBASE_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FIREBASE_APP_NAME]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [URL]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: i1.ɵAngularFireSchedulers }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_EMULATOR]\n                }] }, { type: i2.AngularFireAuth, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_EMULATOR$1]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [SETTINGS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TENANT_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LANGUAGE_CODE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_DEVICE_LANGUAGE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [PERSISTENCE]\n                }] }, { type: i3.AppCheckInstances, decorators: [{\n                    type: Optional\n                }] }] });\n\nclass AngularFireDatabaseModule {\n    constructor() {\n        firebase.registerVersion('angularfire', VERSION.full, 'rtdb-compat');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: AngularFireDatabaseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: AngularFireDatabaseModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: AngularFireDatabaseModule, providers: [AngularFireDatabase] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: AngularFireDatabaseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [AngularFireDatabase]\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, USE_EMULATOR, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}