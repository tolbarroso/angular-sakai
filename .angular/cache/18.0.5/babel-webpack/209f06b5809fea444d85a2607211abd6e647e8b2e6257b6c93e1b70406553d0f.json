{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/database\";\nexport class ClientService {\n  constructor(db) {\n    this.db = db;\n    this.dbPath = '/clients';\n    this.clientRef = null;\n    this.clientRef = db.list(this.dbPath);\n  }\n  getClients() {\n    // return this.clientRef.valueChanges();\n    return this.clientRef.snapshotChanges().pipe(map(changes => changes.map(c => ({\n      key: c.payload.key,\n      ...c.payload.val()\n    }))));\n  }\n  addClient(client) {\n    this.clientRef.push(client);\n  }\n  updateClient(key, value) {\n    this.clientRef.update(key, value).catch(error => this.handleError(error));\n  }\n  handleError(error) {\n    console.log(error);\n  }\n  deleteClient(key) {\n    this.clientRef.remove(key);\n  }\n  static #_ = this.ɵfac = function ClientService_Factory(t) {\n    return new (t || ClientService)(i0.ɵɵinject(i1.AngularFireDatabase));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClientService,\n    factory: ClientService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","ClientService","constructor","db","dbPath","clientRef","list","getClients","snapshotChanges","pipe","changes","c","key","payload","val","addClient","client","push","updateClient","value","update","catch","error","handleError","console","log","deleteClient","remove","_","i0","ɵɵinject","i1","AngularFireDatabase","_2","factory","ɵfac","providedIn"],"sources":["/workspace/angular-sakai/src/app/demo/components/pages/client/services/client.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/compat/database';\nimport { map, Observable } from 'rxjs';\nimport { Client } from '../models/client.model';\n\nexport interface Item {\n    key?: string;\n    name: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientService {\n    private dbPath = '/clients';\n    clientRef: AngularFireList<Client> = null;\n\n    constructor(private db: AngularFireDatabase) {\n        this.clientRef = db.list(this.dbPath);\n    }\n\n    getClients(): Observable<Client[]> {\n        // return this.clientRef.valueChanges();\n        return this.clientRef.snapshotChanges().pipe(\n            map(changes =>\n                changes.map(c => ({ key: c.payload.key, ...c.payload.val() }))\n            )\n        );\n    }\n\n    addClient(client: Client): void {\n        this.clientRef.push(client);\n    }\n\n    updateClient(key: string, value: any): void {\n        this.clientRef.update(key, value).catch(error => this.handleError(error));\n    }\n\n    private handleError(error) {\n        console.log(error);\n    }\n\n    deleteClient(key: string): void {\n        this.clientRef.remove(key);\n    }\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAoB,MAAM;;;AAWtC,OAAM,MAAOC,aAAa;EAItBC,YAAoBC,EAAuB;IAAvB,KAAAA,EAAE,GAAFA,EAAE;IAHd,KAAAC,MAAM,GAAG,UAAU;IAC3B,KAAAC,SAAS,GAA4B,IAAI;IAGrC,IAAI,CAACA,SAAS,GAAGF,EAAE,CAACG,IAAI,CAAC,IAAI,CAACF,MAAM,CAAC;EACzC;EAEAG,UAAUA,CAAA;IACN;IACA,OAAO,IAAI,CAACF,SAAS,CAACG,eAAe,EAAE,CAACC,IAAI,CACxCT,GAAG,CAACU,OAAO,IACPA,OAAO,CAACV,GAAG,CAACW,CAAC,KAAK;MAAEC,GAAG,EAAED,CAAC,CAACE,OAAO,CAACD,GAAG;MAAE,GAAGD,CAAC,CAACE,OAAO,CAACC,GAAG;IAAE,CAAE,CAAC,CAAC,CACjE,CACJ;EACL;EAEAC,SAASA,CAACC,MAAc;IACpB,IAAI,CAACX,SAAS,CAACY,IAAI,CAACD,MAAM,CAAC;EAC/B;EAEAE,YAAYA,CAACN,GAAW,EAAEO,KAAU;IAChC,IAAI,CAACd,SAAS,CAACe,MAAM,CAACR,GAAG,EAAEO,KAAK,CAAC,CAACE,KAAK,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAC7E;EAEQC,WAAWA,CAACD,KAAK;IACrBE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EACtB;EAEAI,YAAYA,CAACd,GAAW;IACpB,IAAI,CAACP,SAAS,CAACsB,MAAM,CAACf,GAAG,CAAC;EAC9B;EAAC,QAAAgB,CAAA,G;qBA/BQ3B,aAAa,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,mBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbhC,aAAa;IAAAiC,OAAA,EAAbjC,aAAa,CAAAkC,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}