{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/demo/service/node.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"primeng/tree\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"primeng/treetable\";\nfunction TreeDemoComponent_ng_template_11_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", col_r1.header, \" \");\n  }\n}\nfunction TreeDemoComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, TreeDemoComponent_ng_template_11_th_1_Template, 2, 1, \"th\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const columns_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", columns_r2);\n  }\n}\nfunction TreeDemoComponent_ng_template_12_td_1_p_treeTableToggler_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-treeTableToggler\", 11);\n  }\n  if (rf & 2) {\n    const rowNode_r3 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"rowNode\", rowNode_r3);\n  }\n}\nfunction TreeDemoComponent_ng_template_12_td_1_p_treeTableCheckbox_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-treeTableCheckbox\", 12);\n  }\n  if (rf & 2) {\n    const rowNode_r3 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"value\", rowNode_r3);\n  }\n}\nfunction TreeDemoComponent_ng_template_12_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, TreeDemoComponent_ng_template_12_td_1_p_treeTableToggler_1_Template, 1, 1, \"p-treeTableToggler\", 9)(2, TreeDemoComponent_ng_template_12_td_1_p_treeTableCheckbox_2_Template, 1, 1, \"p-treeTableCheckbox\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const rowData_r6 = i0.ɵɵnextContext().rowData;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", i_r5 === 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", i_r5 === 0);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", rowData_r6[col_r4.field], \" \");\n  }\n}\nfunction TreeDemoComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, TreeDemoComponent_ng_template_12_td_1_Template, 4, 3, \"td\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const columns_r7 = ctx.columns;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", columns_r7);\n  }\n}\nexport class TreeDemoComponent {\n  constructor(nodeService) {\n    this.nodeService = nodeService;\n    this.files1 = [];\n    this.files2 = [];\n    this.files3 = [];\n    this.selectedFiles1 = [];\n    this.selectedFiles2 = [];\n    this.selectedFiles3 = {};\n    this.cols = [];\n  }\n  ngOnInit() {\n    this.nodeService.getFiles().then(files => this.files1 = files);\n    this.nodeService.getFilesystem().then(files => this.files2 = files);\n    this.nodeService.getFiles().then(files => {\n      this.files3 = [{\n        label: 'Root',\n        children: files\n      }];\n    });\n    this.cols = [{\n      field: 'name',\n      header: 'Name'\n    }, {\n      field: 'size',\n      header: 'Size'\n    }, {\n      field: 'type',\n      header: 'Type'\n    }];\n  }\n  static #_ = this.ɵfac = function TreeDemoComponent_Factory(t) {\n    return new (t || TreeDemoComponent)(i0.ɵɵdirectiveInject(i1.NodeService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TreeDemoComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 18,\n    vars: 7,\n    consts: [[1, \"grid\"], [1, \"col-12\"], [1, \"card\"], [\"selectionMode\", \"checkbox\", 3, \"selectionChange\", \"value\", \"selection\"], [\"selectionMode\", \"checkbox\", 3, \"selectionChange\", \"value\", \"columns\", \"selection\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"layout\", \"horizontal\", \"selectionMode\", \"single\", 3, \"selectionChange\", \"value\", \"selection\"], [4, \"ngFor\", \"ngForOf\"], [3, \"rowNode\", 4, \"ngIf\"], [3, \"value\", 4, \"ngIf\"], [3, \"rowNode\"], [3, \"value\"]],\n    template: function TreeDemoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\");\n        i0.ɵɵtext(4, \"Tree\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p-tree\", 3);\n        i0.ɵɵtwoWayListener(\"selectionChange\", function TreeDemoComponent_Template_p_tree_selectionChange_5_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.selectedFiles1, $event) || (ctx.selectedFiles1 = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"div\", 2)(8, \"h5\");\n        i0.ɵɵtext(9, \"TreeTable\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p-treeTable\", 4);\n        i0.ɵɵtwoWayListener(\"selectionChange\", function TreeDemoComponent_Template_p_treeTable_selectionChange_10_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.selectedFiles2, $event) || (ctx.selectedFiles2 = $event);\n          return $event;\n        });\n        i0.ɵɵtemplate(11, TreeDemoComponent_ng_template_11_Template, 2, 1, \"ng-template\", 5)(12, TreeDemoComponent_ng_template_12_Template, 2, 1, \"ng-template\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"div\", 2)(15, \"h5\");\n        i0.ɵɵtext(16, \"Horizontal Tree\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p-tree\", 7);\n        i0.ɵɵtwoWayListener(\"selectionChange\", function TreeDemoComponent_Template_p_tree_selectionChange_17_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.selectedFiles3, $event) || (ctx.selectedFiles3 = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"value\", ctx.files1);\n        i0.ɵɵtwoWayProperty(\"selection\", ctx.selectedFiles1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"value\", ctx.files2)(\"columns\", ctx.cols);\n        i0.ɵɵtwoWayProperty(\"selection\", ctx.selectedFiles2);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"value\", ctx.files3);\n        i0.ɵɵtwoWayProperty(\"selection\", ctx.selectedFiles3);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.Tree, i4.PrimeTemplate, i5.TreeTable, i5.TreeTableToggler, i5.TTCheckbox],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","col_r1","header","ɵɵtemplate","TreeDemoComponent_ng_template_11_th_1_Template","ɵɵproperty","columns_r2","ɵɵelement","rowNode_r3","TreeDemoComponent_ng_template_12_td_1_p_treeTableToggler_1_Template","TreeDemoComponent_ng_template_12_td_1_p_treeTableCheckbox_2_Template","i_r5","rowData_r6","col_r4","field","TreeDemoComponent_ng_template_12_td_1_Template","columns_r7","TreeDemoComponent","constructor","nodeService","files1","files2","files3","selectedFiles1","selectedFiles2","selectedFiles3","cols","ngOnInit","getFiles","then","files","getFilesystem","label","children","_","ɵɵdirectiveInject","i1","NodeService","_2","selectors","decls","vars","consts","template","TreeDemoComponent_Template","rf","ctx","ɵɵtwoWayListener","TreeDemoComponent_Template_p_tree_selectionChange_5_listener","$event","ɵɵtwoWayBindingSet","TreeDemoComponent_Template_p_treeTable_selectionChange_10_listener","TreeDemoComponent_ng_template_11_Template","TreeDemoComponent_ng_template_12_Template","TreeDemoComponent_Template_p_tree_selectionChange_17_listener","ɵɵtwoWayProperty"],"sources":["/workspace/angular-sakai/src/app/demo/components/uikit/tree/treedemo.component.ts","/workspace/angular-sakai/src/app/demo/components/uikit/tree/treedemo.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NodeService } from 'src/app/demo/service/node.service';\nimport { TreeNode} from 'primeng/api';\n\n@Component({\n    templateUrl: './treedemo.component.html'\n})\nexport class TreeDemoComponent implements OnInit {\n\n    files1: TreeNode[] = [];\n\n    files2: TreeNode[] = [];\n\n    files3: TreeNode[] = [];\n\n    selectedFiles1: TreeNode[] = [];\n\n    selectedFiles2: TreeNode[] = [];\n\n    selectedFiles3: TreeNode = {};\n\n    cols: any[] = [];\n\n    constructor(private nodeService: NodeService) {}\n\n    ngOnInit() {\n        this.nodeService.getFiles().then(files => this.files1 = files);\n        this.nodeService.getFilesystem().then(files => this.files2 = files);\n        this.nodeService.getFiles().then(files => {\n            this.files3 = [{\n                label: 'Root',\n                children: files\n            }];\n        });\n\n        this.cols = [\n            { field: 'name', header: 'Name' },\n            { field: 'size', header: 'Size' },\n            { field: 'type', header: 'Type' }\n        ];\n    }\n}\n","<div class=\"grid\">\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>Tree</h5>\n\t\t\t<p-tree [value]=\"files1\" selectionMode=\"checkbox\" [(selection)]=\"selectedFiles1\"></p-tree>\n\t\t</div>\n\t</div>\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>TreeTable</h5>\n\t\t\t<p-treeTable [value]=\"files2\" [columns]=\"cols\" selectionMode=\"checkbox\" [(selection)]=\"selectedFiles2\">\n\t\t\t\t<ng-template pTemplate=\"header\" let-columns>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th *ngFor=\"let col of columns\">\n\t\t\t\t\t\t\t{{col.header}}\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td *ngFor=\"let col of columns; let i = index\">\n\t\t\t\t\t\t\t<p-treeTableToggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></p-treeTableToggler>\n\t\t\t\t\t\t\t<p-treeTableCheckbox [value]=\"rowNode\" *ngIf=\"i === 0\"></p-treeTableCheckbox>\n\t\t\t\t\t\t\t{{rowData[col.field]}}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t</p-treeTable>\n\t\t</div>\n\t</div>\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>Horizontal Tree</h5>\n\t\t\t<p-tree [value]=\"files3\" layout=\"horizontal\" selectionMode=\"single\" [(selection)]=\"selectedFiles3\"></p-tree>\n\t\t</div>\n\t</div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}