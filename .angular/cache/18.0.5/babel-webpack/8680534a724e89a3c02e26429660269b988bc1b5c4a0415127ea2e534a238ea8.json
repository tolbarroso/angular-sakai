{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class IconService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'assets/demo/data/icons.json';\n  }\n  getIcons() {\n    return this.http.get(this.apiUrl).pipe(map(response => {\n      this.icons = response.icons;\n      return this.icons;\n    }));\n  }\n  static #_ = this.ɵfac = function IconService_Factory(t) {\n    return new (t || IconService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IconService,\n    factory: IconService.ɵfac\n  });\n}","map":{"version":3,"names":["map","IconService","constructor","http","apiUrl","getIcons","get","pipe","response","icons","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["/workspace/angular-sakai/src/app/demo/service/icon.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class IconService {\n\n    constructor(private http: HttpClient) { }\n\n    icons!: any[];\n\n    selectedIcon: any;\n\n    apiUrl = 'assets/demo/data/icons.json';\n\n    getIcons() {\n        return this.http.get(this.apiUrl).pipe(map((response: any) => {\n            this.icons = response.icons;\n            return this.icons;\n        }));\n    }\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAGpC,OAAM,MAAOC,WAAW;EAEpBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAMxB,KAAAC,MAAM,GAAG,6BAA6B;EANE;EAQxCC,QAAQA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CAACP,GAAG,CAAEQ,QAAa,IAAI;MACzD,IAAI,CAACC,KAAK,GAAGD,QAAQ,CAACC,KAAK;MAC3B,OAAO,IAAI,CAACA,KAAK;IACrB,CAAC,CAAC,CAAC;EACP;EAAC,QAAAC,CAAA,G;qBAfQT,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXd,WAAW;IAAAe,OAAA,EAAXf,WAAW,CAAAgB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}