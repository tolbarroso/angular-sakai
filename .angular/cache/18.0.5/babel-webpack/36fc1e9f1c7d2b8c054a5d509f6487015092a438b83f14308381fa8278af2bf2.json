{"ast":null,"code":"import { style, state, animate, transition, trigger } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { Footer, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { MinusIcon } from 'primeng/icons/minus';\nimport { PlusIcon } from 'primeng/icons/plus';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { UniqueComponentId } from 'primeng/utils';\n\n/**\n * Panel is a container with the optional content toggle feature.\n * @group Components\n */\nconst _c0 = [\"*\", [[\"p-header\"]], [[\"p-footer\"]]];\nconst _c1 = [\"*\", \"p-header\", \"p-footer\"];\nconst _c2 = (a0, a1) => ({\n  \"p-panel p-component\": true,\n  \"p-panel-toggleable\": a0,\n  \"p-panel-expanded\": a1\n});\nconst _c3 = a0 => ({\n  transitionParams: a0,\n  height: \"0\",\n  opacity: \"0\"\n});\nconst _c4 = a0 => ({\n  value: \"hidden\",\n  params: a0\n});\nconst _c5 = a0 => ({\n  transitionParams: a0,\n  height: \"*\",\n  opacity: \"1\"\n});\nconst _c6 = a0 => ({\n  value: \"visible\",\n  params: a0\n});\nconst _c7 = (a0, a1, a2) => ({\n  \"p-panel-icons-start\": a0,\n  \"p-panel-icons-end\": a1,\n  \"p-panel-icons-center\": a2\n});\nconst _c8 = a0 => ({\n  $implicit: a0\n});\nfunction Panel_div_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"id\", ctx_r1.id + \"_header\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.header);\n  }\n}\nfunction Panel_div_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Panel_div_1_5_ng_template_0_Template(rf, ctx) {}\nfunction Panel_div_1_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Panel_div_1_5_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Panel_div_1_button_6_ng_container_1_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵclassMap(ctx_r1.expandIcon);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.iconClass);\n  }\n}\nfunction Panel_div_1_button_6_ng_container_1_ng_container_1_MinusIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"MinusIcon\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"styleClass\", ctx_r1.iconClass);\n  }\n}\nfunction Panel_div_1_button_6_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Panel_div_1_button_6_ng_container_1_ng_container_1_span_1_Template, 1, 3, \"span\", 14)(2, Panel_div_1_button_6_ng_container_1_ng_container_1_MinusIcon_2_Template, 1, 1, \"MinusIcon\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.expandIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.expandIcon);\n  }\n}\nfunction Panel_div_1_button_6_ng_container_1_ng_container_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵclassMap(ctx_r1.collapseIcon);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.iconClass);\n  }\n}\nfunction Panel_div_1_button_6_ng_container_1_ng_container_2_PlusIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"PlusIcon\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"styleClass\", ctx_r1.iconClass);\n  }\n}\nfunction Panel_div_1_button_6_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Panel_div_1_button_6_ng_container_1_ng_container_2_span_1_Template, 1, 3, \"span\", 14)(2, Panel_div_1_button_6_ng_container_1_ng_container_2_PlusIcon_2_Template, 1, 1, \"PlusIcon\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.collapseIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.collapseIcon);\n  }\n}\nfunction Panel_div_1_button_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Panel_div_1_button_6_ng_container_1_ng_container_1_Template, 3, 2, \"ng-container\", 12)(2, Panel_div_1_button_6_ng_container_1_ng_container_2_Template, 3, 2, \"ng-container\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.collapsed);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.collapsed);\n  }\n}\nfunction Panel_div_1_button_6_2_ng_template_0_Template(rf, ctx) {}\nfunction Panel_div_1_button_6_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Panel_div_1_button_6_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Panel_div_1_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function Panel_div_1_button_6_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onIconClick($event));\n    })(\"keydown\", function Panel_div_1_button_6_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onKeyDown($event));\n    });\n    i0.ɵɵtemplate(1, Panel_div_1_button_6_ng_container_1_Template, 3, 2, \"ng-container\", 12)(2, Panel_div_1_button_6_2_Template, 1, 0, null, 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"id\", ctx_r1.id + \"_header\")(\"aria-label\", ctx_r1.buttonAriaLabel)(\"aria-controls\", ctx_r1.id + \"_content\")(\"aria-expanded\", !ctx_r1.collapsed);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.headerIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.headerIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c8, ctx_r1.collapsed));\n  }\n}\nfunction Panel_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function Panel_div_1_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onHeaderClick($event));\n    });\n    i0.ɵɵtemplate(1, Panel_div_1_span_1_Template, 2, 2, \"span\", 7);\n    i0.ɵɵprojection(2, 1);\n    i0.ɵɵtemplate(3, Panel_div_1_ng_container_3_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementStart(4, \"div\", 8);\n    i0.ɵɵtemplate(5, Panel_div_1_5_Template, 1, 0, null, 4)(6, Panel_div_1_button_6_Template, 3, 9, \"button\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"id\", ctx_r1.id + \"-titlebar\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.header);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.headerTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(6, _c7, ctx_r1.iconPos === \"start\", ctx_r1.iconPos === \"end\", ctx_r1.iconPos === \"center\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.iconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.toggleable);\n  }\n}\nfunction Panel_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Panel_div_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Panel_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵtemplate(2, Panel_div_6_ng_container_2_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.footerTemplate);\n  }\n}\nclass Panel {\n  el;\n  /**\n   * Defines if content of panel can be expanded and collapsed.\n   * @group Props\n   */\n  toggleable;\n  /**\n   * Header text of the panel.\n   * @group Props\n   */\n  header;\n  /**\n   * Defines the initial state of panel content, supports one or two-way binding as well.\n   * @group Props\n   */\n  collapsed;\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  style;\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Position of the icons.\n   * @group Props\n   */\n  iconPos = 'end';\n  /**\n   * Expand icon of the toggle button.\n   * @group Props\n   * @deprecated since v15.4.2, use `headericons` template instead.\n   */\n  expandIcon;\n  /**\n   * Collapse icon of the toggle button.\n   * @group Props\n   * @deprecated since v15.4.2, use `headericons` template instead.\n   */\n  collapseIcon;\n  /**\n   * Specifies if header of panel cannot be displayed.\n   * @group Props\n   * @deprecated since v15.4.2, use `headericons` template instead.\n   */\n  showHeader = true;\n  /**\n   * Specifies the toggler element to toggle the panel content.\n   * @group Props\n   */\n  toggler = 'icon';\n  /**\n   * Transition options of the animation.\n   * @group Props\n   */\n  transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n  /**\n   * Emitted when the collapsed changes.\n   * @param {boolean} value - New Value.\n   * @group Emits\n   */\n  collapsedChange = new EventEmitter();\n  /**\n   * Callback to invoke before panel toggle.\n   * @param {PanelBeforeToggleEvent} event - Custom panel toggle event\n   * @group Emits\n   */\n  onBeforeToggle = new EventEmitter();\n  /**\n   * Callback to invoke after panel toggle.\n   * @param {PanelAfterToggleEvent} event - Custom panel toggle event\n   * @group Emits\n   */\n  onAfterToggle = new EventEmitter();\n  footerFacet;\n  templates;\n  iconTemplate;\n  animating;\n  headerTemplate;\n  contentTemplate;\n  footerTemplate;\n  headerIconTemplate;\n  get id() {\n    return UniqueComponentId();\n  }\n  get buttonAriaLabel() {\n    return this.header;\n  }\n  constructor(el) {\n    this.el = el;\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'content':\n          this.contentTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n        case 'icons':\n          this.iconTemplate = item.template;\n          break;\n        case 'headericons':\n          this.headerIconTemplate = item.template;\n          break;\n        default:\n          this.contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n  onHeaderClick(event) {\n    if (this.toggler === 'header') {\n      this.toggle(event);\n    }\n  }\n  onIconClick(event) {\n    if (this.toggler === 'icon') {\n      this.toggle(event);\n    }\n  }\n  toggle(event) {\n    if (this.animating) {\n      return false;\n    }\n    this.animating = true;\n    this.onBeforeToggle.emit({\n      originalEvent: event,\n      collapsed: this.collapsed\n    });\n    if (this.toggleable) {\n      if (this.collapsed) this.expand();else this.collapse();\n    }\n    event.preventDefault();\n  }\n  expand() {\n    this.collapsed = false;\n    this.collapsedChange.emit(this.collapsed);\n  }\n  collapse() {\n    this.collapsed = true;\n    this.collapsedChange.emit(this.collapsed);\n  }\n  getBlockableElement() {\n    return this.el.nativeElement.children[0];\n  }\n  onKeyDown(event) {\n    if (event.code === 'Enter' || event.code === 'Space') {\n      this.toggle(event);\n      event.preventDefault();\n    }\n  }\n  onToggleDone(event) {\n    this.animating = false;\n    this.onAfterToggle.emit({\n      originalEvent: event,\n      collapsed: this.collapsed\n    });\n  }\n  static ɵfac = function Panel_Factory(t) {\n    return new (t || Panel)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Panel,\n    selectors: [[\"p-panel\"]],\n    contentQueries: function Panel_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, Footer, 5);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerFacet = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      toggleable: \"toggleable\",\n      header: \"header\",\n      collapsed: \"collapsed\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      iconPos: \"iconPos\",\n      expandIcon: \"expandIcon\",\n      collapseIcon: \"collapseIcon\",\n      showHeader: \"showHeader\",\n      toggler: \"toggler\",\n      transitionOptions: \"transitionOptions\"\n    },\n    outputs: {\n      collapsedChange: \"collapsedChange\",\n      onBeforeToggle: \"onBeforeToggle\",\n      onAfterToggle: \"onAfterToggle\"\n    },\n    ngContentSelectors: _c1,\n    decls: 7,\n    vars: 25,\n    consts: [[3, \"ngClass\", \"ngStyle\"], [\"class\", \"p-panel-header\", 3, \"click\", 4, \"ngIf\"], [\"role\", \"region\", 1, \"p-toggleable-content\", 3, \"id\"], [1, \"p-panel-content\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-panel-footer\", 4, \"ngIf\"], [1, \"p-panel-header\", 3, \"click\"], [\"class\", \"p-panel-title\", 4, \"ngIf\"], [1, \"p-panel-icons\", 3, \"ngClass\"], [\"pRipple\", \"\", \"type\", \"button\", \"role\", \"button\", \"class\", \"p-panel-header-icon p-panel-toggler p-link\", 3, \"click\", \"keydown\", 4, \"ngIf\"], [1, \"p-panel-title\"], [\"pRipple\", \"\", \"type\", \"button\", \"role\", \"button\", 1, \"p-panel-header-icon\", \"p-panel-toggler\", \"p-link\", 3, \"click\", \"keydown\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [3, \"ngClass\"], [3, \"styleClass\"], [1, \"p-panel-footer\"]],\n    template: function Panel_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, Panel_div_1_Template, 7, 10, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵlistener(\"@panelContent.done\", function Panel_Template_div_animation_panelContent_done_2_listener($event) {\n          return ctx.onToggleDone($event);\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵprojection(4);\n        i0.ɵɵtemplate(5, Panel_ng_container_5_Template, 1, 0, \"ng-container\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, Panel_div_6_Template, 3, 1, \"div\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(14, _c2, ctx.toggleable, !ctx.collapsed && ctx.toggleable))(\"ngStyle\", ctx.style);\n        i0.ɵɵattribute(\"id\", ctx.id)(\"data-pc-name\", \"panel\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showHeader);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"id\", ctx.id + \"_content\")(\"@panelContent\", ctx.collapsed ? i0.ɵɵpureFunction1(19, _c4, i0.ɵɵpureFunction1(17, _c3, ctx.animating ? ctx.transitionOptions : \"0ms\")) : i0.ɵɵpureFunction1(23, _c6, i0.ɵɵpureFunction1(21, _c5, ctx.animating ? ctx.transitionOptions : \"0ms\")));\n        i0.ɵɵattribute(\"aria-labelledby\", ctx.id + \"_header\")(\"aria-hidden\", ctx.collapsed)(\"tabindex\", ctx.collapsed ? \"-1\" : undefined);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.footerFacet || ctx.footerTemplate);\n      }\n    },\n    dependencies: () => [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.Ripple, PlusIcon, MinusIcon],\n    styles: [\"@layer primeng{.p-panel-header{display:flex;align-items:center}.p-panel-title{line-height:1;order:1}.p-panel-header-icon{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-panel-toggleable.p-panel-expanded>.p-toggleable-content:not(.ng-animating){overflow:visible}.p-panel-toggleable .p-toggleable-content{overflow:hidden}}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('panelContent', [state('hidden', style({\n        height: '0'\n      })), state('void', style({\n        height: '{{height}}'\n      }), {\n        params: {\n          height: '0'\n        }\n      }), state('visible', style({\n        height: '*'\n      })), transition('visible <=> hidden', [animate('{{transitionParams}}')]), transition('void => hidden', animate('{{transitionParams}}')), transition('void => visible', animate('{{transitionParams}}'))])]\n    },\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Panel, [{\n    type: Component,\n    args: [{\n      selector: 'p-panel',\n      template: `\n        <div [attr.id]=\"id\" [attr.data-pc-name]=\"'panel'\" [ngClass]=\"{ 'p-panel p-component': true, 'p-panel-toggleable': toggleable, 'p-panel-expanded': !collapsed && toggleable }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-panel-header\" *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"p-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{ header }}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <div class=\"p-panel-icons\" [ngClass]=\"{ 'p-panel-icons-start': iconPos === 'start', 'p-panel-icons-end': iconPos === 'end', 'p-panel-icons-center': iconPos === 'center' }\">\n                    <ng-template *ngTemplateOutlet=\"iconTemplate\"></ng-template>\n                    <button\n                        *ngIf=\"toggleable\"\n                        [attr.id]=\"id + '_header'\"\n                        pRipple\n                        type=\"button\"\n                        role=\"button\"\n                        class=\"p-panel-header-icon p-panel-toggler p-link\"\n                        [attr.aria-label]=\"buttonAriaLabel\"\n                        [attr.aria-controls]=\"id + '_content'\"\n                        [attr.aria-expanded]=\"!collapsed\"\n                        (click)=\"onIconClick($event)\"\n                        (keydown)=\"onKeyDown($event)\"\n                    >\n                        <ng-container *ngIf=\"!headerIconTemplate\">\n                            <ng-container *ngIf=\"!collapsed\">\n                                <span *ngIf=\"expandIcon\" [class]=\"expandIcon\" [ngClass]=\"iconClass\"></span>\n                                <MinusIcon *ngIf=\"!expandIcon\" [styleClass]=\"iconClass\" />\n                            </ng-container>\n\n                            <ng-container *ngIf=\"collapsed\">\n                                <span *ngIf=\"collapseIcon\" [class]=\"collapseIcon\" [ngClass]=\"iconClass\"></span>\n                                <PlusIcon *ngIf=\"!collapseIcon\" [styleClass]=\"iconClass\" />\n                            </ng-container>\n                        </ng-container>\n\n                        <ng-template *ngTemplateOutlet=\"headerIconTemplate; context: { $implicit: collapsed }\"></ng-template>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"p-toggleable-content\"\n                [id]=\"id + '_content'\"\n                role=\"region\"\n                [attr.aria-labelledby]=\"id + '_header'\"\n                [attr.aria-hidden]=\"collapsed\"\n                [attr.tabindex]=\"collapsed ? '-1' : undefined\"\n                [@panelContent]=\"\n                    collapsed\n                        ? { value: 'hidden', params: { transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity: '0' } }\n                        : { value: 'visible', params: { transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1' } }\n                \"\n                (@panelContent.done)=\"onToggleDone($event)\"\n            >\n                <div class=\"p-panel-content\">\n                    <ng-content></ng-content>\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </div>\n\n                <div class=\"p-panel-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                </div>\n            </div>\n        </div>\n    `,\n      animations: [trigger('panelContent', [state('hidden', style({\n        height: '0'\n      })), state('void', style({\n        height: '{{height}}'\n      }), {\n        params: {\n          height: '0'\n        }\n      }), state('visible', style({\n        height: '*'\n      })), transition('visible <=> hidden', [animate('{{transitionParams}}')]), transition('void => hidden', animate('{{transitionParams}}')), transition('void => visible', animate('{{transitionParams}}'))])],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      },\n      styles: [\"@layer primeng{.p-panel-header{display:flex;align-items:center}.p-panel-title{line-height:1;order:1}.p-panel-header-icon{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-panel-toggleable.p-panel-expanded>.p-toggleable-content:not(.ng-animating){overflow:visible}.p-panel-toggleable .p-toggleable-content{overflow:hidden}}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], {\n    toggleable: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }],\n    collapsed: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    iconPos: [{\n      type: Input\n    }],\n    expandIcon: [{\n      type: Input\n    }],\n    collapseIcon: [{\n      type: Input\n    }],\n    showHeader: [{\n      type: Input\n    }],\n    toggler: [{\n      type: Input\n    }],\n    transitionOptions: [{\n      type: Input\n    }],\n    collapsedChange: [{\n      type: Output\n    }],\n    onBeforeToggle: [{\n      type: Output\n    }],\n    onAfterToggle: [{\n      type: Output\n    }],\n    footerFacet: [{\n      type: ContentChild,\n      args: [Footer]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass PanelModule {\n  static ɵfac = function PanelModule_Factory(t) {\n    return new (t || PanelModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: PanelModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, SharedModule, RippleModule, PlusIcon, MinusIcon, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PanelModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, SharedModule, RippleModule, PlusIcon, MinusIcon],\n      exports: [Panel, SharedModule],\n      declarations: [Panel]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Panel, PanelModule };","map":{"version":3,"names":["style","state","animate","transition","trigger","i1","CommonModule","i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ContentChild","ContentChildren","NgModule","Footer","PrimeTemplate","SharedModule","MinusIcon","PlusIcon","i2","RippleModule","UniqueComponentId","_c0","_c1","_c2","a0","a1","_c3","transitionParams","height","opacity","_c4","value","params","_c5","_c6","_c7","a2","_c8","$implicit","Panel_div_1_span_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵattribute","id","ɵɵadvance","ɵɵtextInterpolate","header","Panel_div_1_ng_container_3_Template","ɵɵelementContainer","Panel_div_1_5_ng_template_0_Template","Panel_div_1_5_Template","ɵɵtemplate","Panel_div_1_button_6_ng_container_1_ng_container_1_span_1_Template","ɵɵelement","ɵɵclassMap","expandIcon","ɵɵproperty","iconClass","Panel_div_1_button_6_ng_container_1_ng_container_1_MinusIcon_2_Template","Panel_div_1_button_6_ng_container_1_ng_container_1_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","Panel_div_1_button_6_ng_container_1_ng_container_2_span_1_Template","collapseIcon","Panel_div_1_button_6_ng_container_1_ng_container_2_PlusIcon_2_Template","Panel_div_1_button_6_ng_container_1_ng_container_2_Template","Panel_div_1_button_6_ng_container_1_Template","collapsed","Panel_div_1_button_6_2_ng_template_0_Template","Panel_div_1_button_6_2_Template","Panel_div_1_button_6_Template","_r3","ɵɵgetCurrentView","ɵɵlistener","Panel_div_1_button_6_Template_button_click_0_listener","$event","ɵɵrestoreView","ɵɵresetView","onIconClick","Panel_div_1_button_6_Template_button_keydown_0_listener","onKeyDown","buttonAriaLabel","headerIconTemplate","ɵɵpureFunction1","Panel_div_1_Template","_r1","Panel_div_1_Template_div_click_0_listener","onHeaderClick","ɵɵprojection","headerTemplate","ɵɵpureFunction3","iconPos","iconTemplate","toggleable","Panel_ng_container_5_Template","Panel_div_6_ng_container_2_Template","Panel_div_6_Template","footerTemplate","Panel","el","styleClass","showHeader","toggler","transitionOptions","collapsedChange","onBeforeToggle","onAfterToggle","footerFacet","templates","animating","contentTemplate","constructor","ngAfterContentInit","forEach","item","getType","template","event","toggle","emit","originalEvent","expand","collapse","preventDefault","getBlockableElement","nativeElement","children","code","onToggleDone","ɵfac","Panel_Factory","t","ɵɵdirectiveInject","ElementRef","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","Panel_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","inputs","outputs","ngContentSelectors","decls","vars","consts","Panel_Template","ɵɵprojectionDef","Panel_Template_div_animation_panelContent_done_2_listener","ɵɵpureFunction2","undefined","dependencies","NgClass","NgIf","NgTemplateOutlet","NgStyle","Ripple","styles","encapsulation","data","animation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","animations","OnPush","None","host","class","PanelModule","PanelModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/workspace/angular-sakai/node_modules/primeng/fesm2022/primeng-panel.mjs"],"sourcesContent":["import { style, state, animate, transition, trigger } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { Footer, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { MinusIcon } from 'primeng/icons/minus';\nimport { PlusIcon } from 'primeng/icons/plus';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { UniqueComponentId } from 'primeng/utils';\n\n/**\n * Panel is a container with the optional content toggle feature.\n * @group Components\n */\nclass Panel {\n    el;\n    /**\n     * Defines if content of panel can be expanded and collapsed.\n     * @group Props\n     */\n    toggleable;\n    /**\n     * Header text of the panel.\n     * @group Props\n     */\n    header;\n    /**\n     * Defines the initial state of panel content, supports one or two-way binding as well.\n     * @group Props\n     */\n    collapsed;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Position of the icons.\n     * @group Props\n     */\n    iconPos = 'end';\n    /**\n     * Expand icon of the toggle button.\n     * @group Props\n     * @deprecated since v15.4.2, use `headericons` template instead.\n     */\n    expandIcon;\n    /**\n     * Collapse icon of the toggle button.\n     * @group Props\n     * @deprecated since v15.4.2, use `headericons` template instead.\n     */\n    collapseIcon;\n    /**\n     * Specifies if header of panel cannot be displayed.\n     * @group Props\n     * @deprecated since v15.4.2, use `headericons` template instead.\n     */\n    showHeader = true;\n    /**\n     * Specifies the toggler element to toggle the panel content.\n     * @group Props\n     */\n    toggler = 'icon';\n    /**\n     * Transition options of the animation.\n     * @group Props\n     */\n    transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n    /**\n     * Emitted when the collapsed changes.\n     * @param {boolean} value - New Value.\n     * @group Emits\n     */\n    collapsedChange = new EventEmitter();\n    /**\n     * Callback to invoke before panel toggle.\n     * @param {PanelBeforeToggleEvent} event - Custom panel toggle event\n     * @group Emits\n     */\n    onBeforeToggle = new EventEmitter();\n    /**\n     * Callback to invoke after panel toggle.\n     * @param {PanelAfterToggleEvent} event - Custom panel toggle event\n     * @group Emits\n     */\n    onAfterToggle = new EventEmitter();\n    footerFacet;\n    templates;\n    iconTemplate;\n    animating;\n    headerTemplate;\n    contentTemplate;\n    footerTemplate;\n    headerIconTemplate;\n    get id() {\n        return UniqueComponentId();\n    }\n    get buttonAriaLabel() {\n        return this.header;\n    }\n    constructor(el) {\n        this.el = el;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'content':\n                    this.contentTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'icons':\n                    this.iconTemplate = item.template;\n                    break;\n                case 'headericons':\n                    this.headerIconTemplate = item.template;\n                    break;\n                default:\n                    this.contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    onHeaderClick(event) {\n        if (this.toggler === 'header') {\n            this.toggle(event);\n        }\n    }\n    onIconClick(event) {\n        if (this.toggler === 'icon') {\n            this.toggle(event);\n        }\n    }\n    toggle(event) {\n        if (this.animating) {\n            return false;\n        }\n        this.animating = true;\n        this.onBeforeToggle.emit({ originalEvent: event, collapsed: this.collapsed });\n        if (this.toggleable) {\n            if (this.collapsed)\n                this.expand();\n            else\n                this.collapse();\n        }\n        event.preventDefault();\n    }\n    expand() {\n        this.collapsed = false;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    collapse() {\n        this.collapsed = true;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    getBlockableElement() {\n        return this.el.nativeElement.children[0];\n    }\n    onKeyDown(event) {\n        if (event.code === 'Enter' || event.code === 'Space') {\n            this.toggle(event);\n            event.preventDefault();\n        }\n    }\n    onToggleDone(event) {\n        this.animating = false;\n        this.onAfterToggle.emit({ originalEvent: event, collapsed: this.collapsed });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Panel, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: Panel, selector: \"p-panel\", inputs: { toggleable: \"toggleable\", header: \"header\", collapsed: \"collapsed\", style: \"style\", styleClass: \"styleClass\", iconPos: \"iconPos\", expandIcon: \"expandIcon\", collapseIcon: \"collapseIcon\", showHeader: \"showHeader\", toggler: \"toggler\", transitionOptions: \"transitionOptions\" }, outputs: { collapsedChange: \"collapsedChange\", onBeforeToggle: \"onBeforeToggle\", onAfterToggle: \"onAfterToggle\" }, host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"footerFacet\", first: true, predicate: Footer, descendants: true }, { propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div [attr.id]=\"id\" [attr.data-pc-name]=\"'panel'\" [ngClass]=\"{ 'p-panel p-component': true, 'p-panel-toggleable': toggleable, 'p-panel-expanded': !collapsed && toggleable }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-panel-header\" *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"p-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{ header }}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <div class=\"p-panel-icons\" [ngClass]=\"{ 'p-panel-icons-start': iconPos === 'start', 'p-panel-icons-end': iconPos === 'end', 'p-panel-icons-center': iconPos === 'center' }\">\n                    <ng-template *ngTemplateOutlet=\"iconTemplate\"></ng-template>\n                    <button\n                        *ngIf=\"toggleable\"\n                        [attr.id]=\"id + '_header'\"\n                        pRipple\n                        type=\"button\"\n                        role=\"button\"\n                        class=\"p-panel-header-icon p-panel-toggler p-link\"\n                        [attr.aria-label]=\"buttonAriaLabel\"\n                        [attr.aria-controls]=\"id + '_content'\"\n                        [attr.aria-expanded]=\"!collapsed\"\n                        (click)=\"onIconClick($event)\"\n                        (keydown)=\"onKeyDown($event)\"\n                    >\n                        <ng-container *ngIf=\"!headerIconTemplate\">\n                            <ng-container *ngIf=\"!collapsed\">\n                                <span *ngIf=\"expandIcon\" [class]=\"expandIcon\" [ngClass]=\"iconClass\"></span>\n                                <MinusIcon *ngIf=\"!expandIcon\" [styleClass]=\"iconClass\" />\n                            </ng-container>\n\n                            <ng-container *ngIf=\"collapsed\">\n                                <span *ngIf=\"collapseIcon\" [class]=\"collapseIcon\" [ngClass]=\"iconClass\"></span>\n                                <PlusIcon *ngIf=\"!collapseIcon\" [styleClass]=\"iconClass\" />\n                            </ng-container>\n                        </ng-container>\n\n                        <ng-template *ngTemplateOutlet=\"headerIconTemplate; context: { $implicit: collapsed }\"></ng-template>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"p-toggleable-content\"\n                [id]=\"id + '_content'\"\n                role=\"region\"\n                [attr.aria-labelledby]=\"id + '_header'\"\n                [attr.aria-hidden]=\"collapsed\"\n                [attr.tabindex]=\"collapsed ? '-1' : undefined\"\n                [@panelContent]=\"\n                    collapsed\n                        ? { value: 'hidden', params: { transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity: '0' } }\n                        : { value: 'visible', params: { transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1' } }\n                \"\n                (@panelContent.done)=\"onToggleDone($event)\"\n            >\n                <div class=\"p-panel-content\">\n                    <ng-content></ng-content>\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </div>\n\n                <div class=\"p-panel-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                </div>\n            </div>\n        </div>\n    `, isInline: true, styles: [\"@layer primeng{.p-panel-header{display:flex;align-items:center}.p-panel-title{line-height:1;order:1}.p-panel-header-icon{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-panel-toggleable.p-panel-expanded>.p-toggleable-content:not(.ng-animating){overflow:visible}.p-panel-toggleable .p-toggleable-content{overflow:hidden}}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i1.NgClass), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgStyle), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i0.forwardRef(() => i2.Ripple), selector: \"[pRipple]\" }, { kind: \"component\", type: i0.forwardRef(() => PlusIcon), selector: \"PlusIcon\" }, { kind: \"component\", type: i0.forwardRef(() => MinusIcon), selector: \"MinusIcon\" }], animations: [\n            trigger('panelContent', [\n                state('hidden', style({\n                    height: '0'\n                })),\n                state('void', style({\n                    height: '{{height}}'\n                }), { params: { height: '0' } }),\n                state('visible', style({\n                    height: '*'\n                })),\n                transition('visible <=> hidden', [animate('{{transitionParams}}')]),\n                transition('void => hidden', animate('{{transitionParams}}')),\n                transition('void => visible', animate('{{transitionParams}}'))\n            ])\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Panel, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-panel', template: `\n        <div [attr.id]=\"id\" [attr.data-pc-name]=\"'panel'\" [ngClass]=\"{ 'p-panel p-component': true, 'p-panel-toggleable': toggleable, 'p-panel-expanded': !collapsed && toggleable }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-panel-header\" *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"p-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{ header }}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <div class=\"p-panel-icons\" [ngClass]=\"{ 'p-panel-icons-start': iconPos === 'start', 'p-panel-icons-end': iconPos === 'end', 'p-panel-icons-center': iconPos === 'center' }\">\n                    <ng-template *ngTemplateOutlet=\"iconTemplate\"></ng-template>\n                    <button\n                        *ngIf=\"toggleable\"\n                        [attr.id]=\"id + '_header'\"\n                        pRipple\n                        type=\"button\"\n                        role=\"button\"\n                        class=\"p-panel-header-icon p-panel-toggler p-link\"\n                        [attr.aria-label]=\"buttonAriaLabel\"\n                        [attr.aria-controls]=\"id + '_content'\"\n                        [attr.aria-expanded]=\"!collapsed\"\n                        (click)=\"onIconClick($event)\"\n                        (keydown)=\"onKeyDown($event)\"\n                    >\n                        <ng-container *ngIf=\"!headerIconTemplate\">\n                            <ng-container *ngIf=\"!collapsed\">\n                                <span *ngIf=\"expandIcon\" [class]=\"expandIcon\" [ngClass]=\"iconClass\"></span>\n                                <MinusIcon *ngIf=\"!expandIcon\" [styleClass]=\"iconClass\" />\n                            </ng-container>\n\n                            <ng-container *ngIf=\"collapsed\">\n                                <span *ngIf=\"collapseIcon\" [class]=\"collapseIcon\" [ngClass]=\"iconClass\"></span>\n                                <PlusIcon *ngIf=\"!collapseIcon\" [styleClass]=\"iconClass\" />\n                            </ng-container>\n                        </ng-container>\n\n                        <ng-template *ngTemplateOutlet=\"headerIconTemplate; context: { $implicit: collapsed }\"></ng-template>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"p-toggleable-content\"\n                [id]=\"id + '_content'\"\n                role=\"region\"\n                [attr.aria-labelledby]=\"id + '_header'\"\n                [attr.aria-hidden]=\"collapsed\"\n                [attr.tabindex]=\"collapsed ? '-1' : undefined\"\n                [@panelContent]=\"\n                    collapsed\n                        ? { value: 'hidden', params: { transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity: '0' } }\n                        : { value: 'visible', params: { transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1' } }\n                \"\n                (@panelContent.done)=\"onToggleDone($event)\"\n            >\n                <div class=\"p-panel-content\">\n                    <ng-content></ng-content>\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </div>\n\n                <div class=\"p-panel-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                </div>\n            </div>\n        </div>\n    `, animations: [\n                        trigger('panelContent', [\n                            state('hidden', style({\n                                height: '0'\n                            })),\n                            state('void', style({\n                                height: '{{height}}'\n                            }), { params: { height: '0' } }),\n                            state('visible', style({\n                                height: '*'\n                            })),\n                            transition('visible <=> hidden', [animate('{{transitionParams}}')]),\n                            transition('void => hidden', animate('{{transitionParams}}')),\n                            transition('void => visible', animate('{{transitionParams}}'))\n                        ])\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\"@layer primeng{.p-panel-header{display:flex;align-items:center}.p-panel-title{line-height:1;order:1}.p-panel-header-icon{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-panel-toggleable.p-panel-expanded>.p-toggleable-content:not(.ng-animating){overflow:visible}.p-panel-toggleable .p-toggleable-content{overflow:hidden}}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }], propDecorators: { toggleable: [{\n                type: Input\n            }], header: [{\n                type: Input\n            }], collapsed: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], iconPos: [{\n                type: Input\n            }], expandIcon: [{\n                type: Input\n            }], collapseIcon: [{\n                type: Input\n            }], showHeader: [{\n                type: Input\n            }], toggler: [{\n                type: Input\n            }], transitionOptions: [{\n                type: Input\n            }], collapsedChange: [{\n                type: Output\n            }], onBeforeToggle: [{\n                type: Output\n            }], onAfterToggle: [{\n                type: Output\n            }], footerFacet: [{\n                type: ContentChild,\n                args: [Footer]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass PanelModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: PanelModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: PanelModule, declarations: [Panel], imports: [CommonModule, SharedModule, RippleModule, PlusIcon, MinusIcon], exports: [Panel, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: PanelModule, imports: [CommonModule, SharedModule, RippleModule, PlusIcon, MinusIcon, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: PanelModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, SharedModule, RippleModule, PlusIcon, MinusIcon],\n                    exports: [Panel, SharedModule],\n                    declarations: [Panel]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Panel, PanelModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}