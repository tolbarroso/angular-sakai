{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustomerService {\n  constructor(http) {\n    this.http = http;\n  }\n  getCustomersSmall() {\n    return this.http.get('assets/demo/data/customers-small.json').toPromise().then(res => res.data).then(data => data);\n  }\n  getCustomersMedium() {\n    return this.http.get('assets/demo/data/customers-medium.json').toPromise().then(res => res.data).then(data => data);\n  }\n  getCustomersLarge() {\n    return this.http.get('assets/demo/data/customers-large.json').toPromise().then(res => res.data).then(data => data);\n  }\n  static #_ = this.ɵfac = function CustomerService_Factory(t) {\n    return new (t || CustomerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomerService,\n    factory: CustomerService.ɵfac\n  });\n}","map":{"version":3,"names":["CustomerService","constructor","http","getCustomersSmall","get","toPromise","then","res","data","getCustomersMedium","getCustomersLarge","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["/workspace/angular-sakai/src/app/demo/service/customer.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Customer } from '../api/customer';\n\n@Injectable()\nexport class CustomerService {\n\n    constructor(private http: HttpClient) { }\n\n    getCustomersSmall() {\n        return this.http.get<any>('assets/demo/data/customers-small.json')\n            .toPromise()\n            .then(res => res.data as Customer[])\n            .then(data => data);\n    }\n\n    getCustomersMedium() {\n        return this.http.get<any>('assets/demo/data/customers-medium.json')\n            .toPromise()\n            .then(res => res.data as Customer[])\n            .then(data => data);\n    }\n\n    getCustomersLarge() {\n        return this.http.get<any>('assets/demo/data/customers-large.json')\n            .toPromise()\n            .then(res => res.data as Customer[])\n            .then(data => data);\n    }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,eAAe;EAExBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,iBAAiBA,CAAA;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,uCAAuC,CAAC,CAC7DC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAkB,CAAC,CACnCF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;EAC3B;EAEAC,kBAAkBA,CAAA;IACd,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAM,wCAAwC,CAAC,CAC9DC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAkB,CAAC,CACnCF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;EAC3B;EAEAE,iBAAiBA,CAAA;IACb,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAM,uCAAuC,CAAC,CAC7DC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAkB,CAAC,CACnCF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;EAC3B;EAAC,QAAAG,CAAA,G;qBAvBQX,eAAe,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfhB,eAAe;IAAAiB,OAAA,EAAfjB,eAAe,CAAAkB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}