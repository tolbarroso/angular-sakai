{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nfunction Knob__svg_text_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"x\", 50)(\"y\", 57)(\"fill\", ctx_r0.textColor)(\"name\", ctx_r0.name);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.valueToDisplay());\n  }\n}\nconst KNOB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Knob),\n  multi: true\n};\n/**\n * Knob is a form component to define number inputs with a dial.\n * @group Components\n */\nclass Knob {\n  document;\n  renderer;\n  cd;\n  el;\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  style;\n  /**\n   * Defines a string that labels the input for accessibility.\n   * @group Props\n   */\n  ariaLabel;\n  /**\n   * Specifies one or more IDs in the DOM that labels the input field.\n   * @group Props\n   */\n  ariaLabelledBy;\n  /**\n   * Index of the element in tabbing order.\n   * @group Props\n   */\n  tabindex = 0;\n  /**\n   * Background of the value.\n   * @group Props\n   */\n  valueColor = 'var(--primary-color, Black)';\n  /**\n   * Background color of the range.\n   * @group Props\n   */\n  rangeColor = 'var(--surface-border, LightGray)';\n  /**\n   * Color of the value text.\n   * @group Props\n   */\n  textColor = 'var(--text-color-secondary, Black)';\n  /**\n   * Template string of the value.\n   * @group Props\n   */\n  valueTemplate = '{value}';\n  /**\n   * Name of the input element.\n   * @group Props\n   */\n  name;\n  /**\n   * Size of the component in pixels.\n   * @group Props\n   */\n  size = 100;\n  /**\n   * Step factor to increment/decrement the value.\n   * @group Props\n   */\n  step = 1;\n  /**\n   * Mininum boundary value.\n   * @group Props\n   */\n  min = 0;\n  /**\n   * Maximum boundary value.\n   * @group Props\n   */\n  max = 100;\n  /**\n   * Width of the knob stroke.\n   * @group Props\n   */\n  strokeWidth = 14;\n  /**\n   * When present, it specifies that the component should be disabled.\n   * @group Props\n   */\n  disabled;\n  /**\n   * Whether the show the value inside the knob.\n   * @group Props\n   */\n  showValue = true;\n  /**\n   * When present, it specifies that the component value cannot be edited.\n   * @group Props\n   */\n  readonly = false;\n  /**\n   * Callback to invoke on value change.\n   * @param {number} value - New value.\n   * @group Emits\n   */\n  onChange = new EventEmitter();\n  radius = 40;\n  midX = 50;\n  midY = 50;\n  minRadians = 4 * Math.PI / 3;\n  maxRadians = -Math.PI / 3;\n  value = 0;\n  windowMouseMoveListener;\n  windowMouseUpListener;\n  windowTouchMoveListener;\n  windowTouchEndListener;\n  onModelChange = () => {};\n  onModelTouched = () => {};\n  constructor(document, renderer, cd, el) {\n    this.document = document;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.el = el;\n  }\n  mapRange(x, inMin, inMax, outMin, outMax) {\n    return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n  }\n  onClick(event) {\n    if (!this.disabled && !this.readonly) {\n      this.updateValue(event.offsetX, event.offsetY);\n    }\n  }\n  updateValue(offsetX, offsetY) {\n    let dx = offsetX - this.size / 2;\n    let dy = this.size / 2 - offsetY;\n    let angle = Math.atan2(dy, dx);\n    let start = -Math.PI / 2 - Math.PI / 6;\n    this.updateModel(angle, start);\n  }\n  updateModel(angle, start) {\n    let mappedValue;\n    if (angle > this.maxRadians) mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);else if (angle < start) mappedValue = this.mapRange(angle + 2 * Math.PI, this.minRadians, this.maxRadians, this.min, this.max);else return;\n    let newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n    this.value = newValue;\n    this.onModelChange(this.value);\n    this.onChange.emit(this.value);\n  }\n  onMouseDown(event) {\n    if (!this.disabled && !this.readonly) {\n      const window = this.document.defaultView || 'window';\n      this.windowMouseMoveListener = this.renderer.listen(window, 'mousemove', this.onMouseMove.bind(this));\n      this.windowMouseUpListener = this.renderer.listen(window, 'mouseup', this.onMouseUp.bind(this));\n      event.preventDefault();\n    }\n  }\n  onMouseUp(event) {\n    if (!this.disabled && !this.readonly) {\n      if (this.windowMouseMoveListener) {\n        this.windowMouseMoveListener();\n        this.windowMouseUpListener = null;\n      }\n      if (this.windowMouseUpListener) {\n        this.windowMouseUpListener();\n        this.windowMouseMoveListener = null;\n      }\n      event.preventDefault();\n    }\n  }\n  onTouchStart(event) {\n    if (!this.disabled && !this.readonly) {\n      const window = this.document.defaultView || 'window';\n      this.windowTouchMoveListener = this.renderer.listen(window, 'touchmove', this.onTouchMove.bind(this));\n      this.windowTouchEndListener = this.renderer.listen(window, 'touchend', this.onTouchEnd.bind(this));\n      event.preventDefault();\n    }\n  }\n  onTouchEnd(event) {\n    if (!this.disabled && !this.readonly) {\n      if (this.windowTouchMoveListener) {\n        this.windowTouchMoveListener();\n      }\n      if (this.windowTouchEndListener) {\n        this.windowTouchEndListener();\n      }\n      this.windowTouchMoveListener = null;\n      this.windowTouchEndListener = null;\n      event.preventDefault();\n    }\n  }\n  onMouseMove(event) {\n    if (!this.disabled && !this.readonly) {\n      this.updateValue(event.offsetX, event.offsetY);\n      event.preventDefault();\n    }\n  }\n  onTouchMove(event) {\n    if (!this.disabled && !this.readonly && event instanceof TouchEvent && event.touches.length === 1) {\n      const rect = this.el.nativeElement.children[0].getBoundingClientRect();\n      const touch = event.targetTouches.item(0);\n      if (touch) {\n        const offsetX = touch.clientX - rect.left;\n        const offsetY = touch.clientY - rect.top;\n        this.updateValue(offsetX, offsetY);\n      }\n    }\n  }\n  updateModelValue(newValue) {\n    if (newValue > this.max) this.value = this.max;else if (newValue < this.min) this.value = this.min;else this.value = newValue;\n    this.onModelChange(this.value);\n    this.onChange.emit(this.value);\n  }\n  onKeyDown(event) {\n    if (!this.disabled && !this.readonly) {\n      switch (event.code) {\n        case 'ArrowRight':\n        case 'ArrowUp':\n          {\n            event.preventDefault();\n            this.updateModelValue(this._value + 1);\n            break;\n          }\n        case 'ArrowLeft':\n        case 'ArrowDown':\n          {\n            event.preventDefault();\n            this.updateModelValue(this._value - 1);\n            break;\n          }\n        case 'Home':\n          {\n            event.preventDefault();\n            this.updateModelValue(this.min);\n            break;\n          }\n        case 'End':\n          {\n            event.preventDefault();\n            this.updateModelValue(this.max);\n            break;\n          }\n        case 'PageUp':\n          {\n            event.preventDefault();\n            this.updateModelValue(this._value + 10);\n            break;\n          }\n        case 'PageDown':\n          {\n            event.preventDefault();\n            this.updateModelValue(this._value - 10);\n            break;\n          }\n      }\n    }\n  }\n  writeValue(value) {\n    this.value = value;\n    this.cd.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  containerClass() {\n    return {\n      'p-knob p-component': true,\n      'p-disabled': this.disabled\n    };\n  }\n  rangePath() {\n    return `M ${this.minX()} ${this.minY()} A ${this.radius} ${this.radius} 0 1 1 ${this.maxX()} ${this.maxY()}`;\n  }\n  valuePath() {\n    return `M ${this.zeroX()} ${this.zeroY()} A ${this.radius} ${this.radius} 0 ${this.largeArc()} ${this.sweep()} ${this.valueX()} ${this.valueY()}`;\n  }\n  zeroRadians() {\n    if (this.min > 0 && this.max > 0) return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);else return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n  }\n  valueRadians() {\n    return this.mapRange(this._value, this.min, this.max, this.minRadians, this.maxRadians);\n  }\n  minX() {\n    return this.midX + Math.cos(this.minRadians) * this.radius;\n  }\n  minY() {\n    return this.midY - Math.sin(this.minRadians) * this.radius;\n  }\n  maxX() {\n    return this.midX + Math.cos(this.maxRadians) * this.radius;\n  }\n  maxY() {\n    return this.midY - Math.sin(this.maxRadians) * this.radius;\n  }\n  zeroX() {\n    return this.midX + Math.cos(this.zeroRadians()) * this.radius;\n  }\n  zeroY() {\n    return this.midY - Math.sin(this.zeroRadians()) * this.radius;\n  }\n  valueX() {\n    return this.midX + Math.cos(this.valueRadians()) * this.radius;\n  }\n  valueY() {\n    return this.midY - Math.sin(this.valueRadians()) * this.radius;\n  }\n  largeArc() {\n    return Math.abs(this.zeroRadians() - this.valueRadians()) < Math.PI ? 0 : 1;\n  }\n  sweep() {\n    return this.valueRadians() > this.zeroRadians() ? 0 : 1;\n  }\n  valueToDisplay() {\n    return this.valueTemplate.replace('{value}', this._value.toString());\n  }\n  get _value() {\n    return this.value != null ? this.value : this.min;\n  }\n  static ɵfac = function Knob_Factory(t) {\n    return new (t || Knob)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Knob,\n    selectors: [[\"p-knob\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      styleClass: \"styleClass\",\n      style: \"style\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      tabindex: \"tabindex\",\n      valueColor: \"valueColor\",\n      rangeColor: \"rangeColor\",\n      textColor: \"textColor\",\n      valueTemplate: \"valueTemplate\",\n      name: \"name\",\n      size: \"size\",\n      step: \"step\",\n      min: \"min\",\n      max: \"max\",\n      strokeWidth: \"strokeWidth\",\n      disabled: \"disabled\",\n      showValue: \"showValue\",\n      readonly: \"readonly\"\n    },\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([KNOB_VALUE_ACCESSOR])],\n    decls: 5,\n    vars: 24,\n    consts: [[3, \"ngClass\", \"ngStyle\"], [\"viewBox\", \"0 0 100 100\", \"role\", \"slider\", 3, \"click\", \"keydown\", \"mousedown\", \"mouseup\", \"touchstart\", \"touchend\"], [1, \"p-knob-range\"], [1, \"p-knob-value\"], [\"text-anchor\", \"middle\", \"class\", \"p-knob-text\", 4, \"ngIf\"], [\"text-anchor\", \"middle\", 1, \"p-knob-text\"]],\n    template: function Knob_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(1, \"svg\", 1);\n        i0.ɵɵlistener(\"click\", function Knob_Template_svg_click_1_listener($event) {\n          return ctx.onClick($event);\n        })(\"keydown\", function Knob_Template_svg_keydown_1_listener($event) {\n          return ctx.onKeyDown($event);\n        })(\"mousedown\", function Knob_Template_svg_mousedown_1_listener($event) {\n          return ctx.onMouseDown($event);\n        })(\"mouseup\", function Knob_Template_svg_mouseup_1_listener($event) {\n          return ctx.onMouseUp($event);\n        })(\"touchstart\", function Knob_Template_svg_touchstart_1_listener($event) {\n          return ctx.onTouchStart($event);\n        })(\"touchend\", function Knob_Template_svg_touchend_1_listener($event) {\n          return ctx.onTouchEnd($event);\n        });\n        i0.ɵɵelement(2, \"path\", 2)(3, \"path\", 3);\n        i0.ɵɵtemplate(4, Knob__svg_text_4_Template, 2, 5, \"text\", 4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n        i0.ɵɵattribute(\"data-pc-name\", \"knob\")(\"data-pc-section\", \"root\");\n        i0.ɵɵadvance();\n        i0.ɵɵstyleProp(\"width\", ctx.size + \"px\")(\"height\", ctx.size + \"px\");\n        i0.ɵɵattribute(\"aria-valuemin\", ctx.min)(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx._value)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-label\", ctx.ariaLabel)(\"tabindex\", ctx.readonly || ctx.disabled ? -1 : ctx.tabindex)(\"data-pc-section\", \"svg\");\n        i0.ɵɵadvance();\n        i0.ɵɵattribute(\"d\", ctx.rangePath())(\"stroke-width\", ctx.strokeWidth)(\"stroke\", ctx.rangeColor);\n        i0.ɵɵadvance();\n        i0.ɵɵattribute(\"d\", ctx.valuePath())(\"stroke-width\", ctx.strokeWidth)(\"stroke\", ctx.valueColor);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showValue);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i1.NgStyle],\n    styles: [\"@keyframes dash-frame{to{stroke-dashoffset:0}}@layer primeng{.p-knob-range{fill:none;transition:stroke .1s ease-in}.p-knob-value{animation-name:dash-frame;animation-fill-mode:forwards;fill:none}.p-knob-text{font-size:1.3rem;text-align:center}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Knob, [{\n    type: Component,\n    args: [{\n      selector: 'p-knob',\n      template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" [attr.data-pc-name]=\"'knob'\" [attr.data-pc-section]=\"'root'\">\n            <svg\n                viewBox=\"0 0 100 100\"\n                role=\"slider\"\n                [style.width]=\"size + 'px'\"\n                [style.height]=\"size + 'px'\"\n                (click)=\"onClick($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (mousedown)=\"onMouseDown($event)\"\n                (mouseup)=\"onMouseUp($event)\"\n                (touchstart)=\"onTouchStart($event)\"\n                (touchend)=\"onTouchEnd($event)\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-valuenow]=\"_value\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.tabindex]=\"readonly || disabled ? -1 : tabindex\"\n                [attr.data-pc-section]=\"'svg'\"\n            >\n                <path [attr.d]=\"rangePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"rangeColor\" class=\"p-knob-range\"></path>\n                <path [attr.d]=\"valuePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"valueColor\" class=\"p-knob-value\"></path>\n                <text *ngIf=\"showValue\" [attr.x]=\"50\" [attr.y]=\"57\" text-anchor=\"middle\" [attr.fill]=\"textColor\" class=\"p-knob-text\" [attr.name]=\"name\">{{ valueToDisplay() }}</text>\n            </svg>\n        </div>\n    `,\n      providers: [KNOB_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      },\n      styles: [\"@keyframes dash-frame{to{stroke-dashoffset:0}}@layer primeng{.p-knob-range{fill:none;transition:stroke .1s ease-in}.p-knob-value{animation-name:dash-frame;animation-fill-mode:forwards;fill:none}.p-knob-text{font-size:1.3rem;text-align:center}}\\n\"]\n    }]\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ElementRef\n  }], {\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    valueColor: [{\n      type: Input\n    }],\n    rangeColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueTemplate: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    showValue: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }]\n  });\n})();\nclass KnobModule {\n  static ɵfac = function KnobModule_Factory(t) {\n    return new (t || KnobModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: KnobModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KnobModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Knob],\n      declarations: [Knob]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { KNOB_VALUE_ACCESSOR, Knob, KnobModule };","map":{"version":3,"names":["i1","DOCUMENT","CommonModule","i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Output","NgModule","NG_VALUE_ACCESSOR","Knob__svg_text_4_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵattribute","textColor","name","ɵɵadvance","ɵɵtextInterpolate","valueToDisplay","KNOB_VALUE_ACCESSOR","provide","useExisting","Knob","multi","document","renderer","cd","el","styleClass","style","ariaLabel","ariaLabelledBy","tabindex","valueColor","rangeColor","valueTemplate","size","step","min","max","strokeWidth","disabled","showValue","readonly","onChange","radius","midX","midY","minRadians","Math","PI","maxRadians","value","windowMouseMoveListener","windowMouseUpListener","windowTouchMoveListener","windowTouchEndListener","onModelChange","onModelTouched","constructor","mapRange","x","inMin","inMax","outMin","outMax","onClick","event","updateValue","offsetX","offsetY","dx","dy","angle","atan2","start","updateModel","mappedValue","newValue","round","emit","onMouseDown","window","defaultView","listen","onMouseMove","bind","onMouseUp","preventDefault","onTouchStart","onTouchMove","onTouchEnd","TouchEvent","touches","length","rect","nativeElement","children","getBoundingClientRect","touch","targetTouches","item","clientX","left","clientY","top","updateModelValue","onKeyDown","code","_value","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","val","containerClass","rangePath","minX","minY","maxX","maxY","valuePath","zeroX","zeroY","largeArc","sweep","valueX","valueY","zeroRadians","valueRadians","cos","sin","abs","replace","toString","ɵfac","Knob_Factory","t","ɵɵdirectiveInject","Renderer2","ChangeDetectorRef","ElementRef","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","inputs","outputs","features","ɵɵProvidersFeature","decls","vars","consts","template","Knob_Template","ɵɵlistener","Knob_Template_svg_click_1_listener","$event","Knob_Template_svg_keydown_1_listener","Knob_Template_svg_mousedown_1_listener","Knob_Template_svg_mouseup_1_listener","Knob_Template_svg_touchstart_1_listener","Knob_Template_svg_touchend_1_listener","ɵɵelement","ɵɵtemplate","ɵɵclassMap","ɵɵproperty","ɵɵstyleProp","dependencies","NgClass","NgIf","NgStyle","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","providers","OnPush","None","host","class","Document","decorators","KnobModule","KnobModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/workspace/angular-sakai/node_modules/primeng/fesm2022/primeng-knob.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst KNOB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Knob),\n    multi: true\n};\n/**\n * Knob is a form component to define number inputs with a dial.\n * @group Components\n */\nclass Knob {\n    document;\n    renderer;\n    cd;\n    el;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Defines a string that labels the input for accessibility.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Specifies one or more IDs in the DOM that labels the input field.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex = 0;\n    /**\n     * Background of the value.\n     * @group Props\n     */\n    valueColor = 'var(--primary-color, Black)';\n    /**\n     * Background color of the range.\n     * @group Props\n     */\n    rangeColor = 'var(--surface-border, LightGray)';\n    /**\n     * Color of the value text.\n     * @group Props\n     */\n    textColor = 'var(--text-color-secondary, Black)';\n    /**\n     * Template string of the value.\n     * @group Props\n     */\n    valueTemplate = '{value}';\n    /**\n     * Name of the input element.\n     * @group Props\n     */\n    name;\n    /**\n     * Size of the component in pixels.\n     * @group Props\n     */\n    size = 100;\n    /**\n     * Step factor to increment/decrement the value.\n     * @group Props\n     */\n    step = 1;\n    /**\n     * Mininum boundary value.\n     * @group Props\n     */\n    min = 0;\n    /**\n     * Maximum boundary value.\n     * @group Props\n     */\n    max = 100;\n    /**\n     * Width of the knob stroke.\n     * @group Props\n     */\n    strokeWidth = 14;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Whether the show the value inside the knob.\n     * @group Props\n     */\n    showValue = true;\n    /**\n     * When present, it specifies that the component value cannot be edited.\n     * @group Props\n     */\n    readonly = false;\n    /**\n     * Callback to invoke on value change.\n     * @param {number} value - New value.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    radius = 40;\n    midX = 50;\n    midY = 50;\n    minRadians = (4 * Math.PI) / 3;\n    maxRadians = -Math.PI / 3;\n    value = 0;\n    windowMouseMoveListener;\n    windowMouseUpListener;\n    windowTouchMoveListener;\n    windowTouchEndListener;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    constructor(document, renderer, cd, el) {\n        this.document = document;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.el = el;\n    }\n    mapRange(x, inMin, inMax, outMin, outMax) {\n        return ((x - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n    onClick(event) {\n        if (!this.disabled && !this.readonly) {\n            this.updateValue(event.offsetX, event.offsetY);\n        }\n    }\n    updateValue(offsetX, offsetY) {\n        let dx = offsetX - this.size / 2;\n        let dy = this.size / 2 - offsetY;\n        let angle = Math.atan2(dy, dx);\n        let start = -Math.PI / 2 - Math.PI / 6;\n        this.updateModel(angle, start);\n    }\n    updateModel(angle, start) {\n        let mappedValue;\n        if (angle > this.maxRadians)\n            mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);\n        else if (angle < start)\n            mappedValue = this.mapRange(angle + 2 * Math.PI, this.minRadians, this.maxRadians, this.min, this.max);\n        else\n            return;\n        let newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n        this.value = newValue;\n        this.onModelChange(this.value);\n        this.onChange.emit(this.value);\n    }\n    onMouseDown(event) {\n        if (!this.disabled && !this.readonly) {\n            const window = this.document.defaultView || 'window';\n            this.windowMouseMoveListener = this.renderer.listen(window, 'mousemove', this.onMouseMove.bind(this));\n            this.windowMouseUpListener = this.renderer.listen(window, 'mouseup', this.onMouseUp.bind(this));\n            event.preventDefault();\n        }\n    }\n    onMouseUp(event) {\n        if (!this.disabled && !this.readonly) {\n            if (this.windowMouseMoveListener) {\n                this.windowMouseMoveListener();\n                this.windowMouseUpListener = null;\n            }\n            if (this.windowMouseUpListener) {\n                this.windowMouseUpListener();\n                this.windowMouseMoveListener = null;\n            }\n            event.preventDefault();\n        }\n    }\n    onTouchStart(event) {\n        if (!this.disabled && !this.readonly) {\n            const window = this.document.defaultView || 'window';\n            this.windowTouchMoveListener = this.renderer.listen(window, 'touchmove', this.onTouchMove.bind(this));\n            this.windowTouchEndListener = this.renderer.listen(window, 'touchend', this.onTouchEnd.bind(this));\n            event.preventDefault();\n        }\n    }\n    onTouchEnd(event) {\n        if (!this.disabled && !this.readonly) {\n            if (this.windowTouchMoveListener) {\n                this.windowTouchMoveListener();\n            }\n            if (this.windowTouchEndListener) {\n                this.windowTouchEndListener();\n            }\n            this.windowTouchMoveListener = null;\n            this.windowTouchEndListener = null;\n            event.preventDefault();\n        }\n    }\n    onMouseMove(event) {\n        if (!this.disabled && !this.readonly) {\n            this.updateValue(event.offsetX, event.offsetY);\n            event.preventDefault();\n        }\n    }\n    onTouchMove(event) {\n        if (!this.disabled && !this.readonly && event instanceof TouchEvent && event.touches.length === 1) {\n            const rect = this.el.nativeElement.children[0].getBoundingClientRect();\n            const touch = event.targetTouches.item(0);\n            if (touch) {\n                const offsetX = touch.clientX - rect.left;\n                const offsetY = touch.clientY - rect.top;\n                this.updateValue(offsetX, offsetY);\n            }\n        }\n    }\n    updateModelValue(newValue) {\n        if (newValue > this.max)\n            this.value = this.max;\n        else if (newValue < this.min)\n            this.value = this.min;\n        else\n            this.value = newValue;\n        this.onModelChange(this.value);\n        this.onChange.emit(this.value);\n    }\n    onKeyDown(event) {\n        if (!this.disabled && !this.readonly) {\n            switch (event.code) {\n                case 'ArrowRight':\n                case 'ArrowUp': {\n                    event.preventDefault();\n                    this.updateModelValue(this._value + 1);\n                    break;\n                }\n                case 'ArrowLeft':\n                case 'ArrowDown': {\n                    event.preventDefault();\n                    this.updateModelValue(this._value - 1);\n                    break;\n                }\n                case 'Home': {\n                    event.preventDefault();\n                    this.updateModelValue(this.min);\n                    break;\n                }\n                case 'End': {\n                    event.preventDefault();\n                    this.updateModelValue(this.max);\n                    break;\n                }\n                case 'PageUp': {\n                    event.preventDefault();\n                    this.updateModelValue(this._value + 10);\n                    break;\n                }\n                case 'PageDown': {\n                    event.preventDefault();\n                    this.updateModelValue(this._value - 10);\n                    break;\n                }\n            }\n        }\n    }\n    writeValue(value) {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    containerClass() {\n        return {\n            'p-knob p-component': true,\n            'p-disabled': this.disabled\n        };\n    }\n    rangePath() {\n        return `M ${this.minX()} ${this.minY()} A ${this.radius} ${this.radius} 0 1 1 ${this.maxX()} ${this.maxY()}`;\n    }\n    valuePath() {\n        return `M ${this.zeroX()} ${this.zeroY()} A ${this.radius} ${this.radius} 0 ${this.largeArc()} ${this.sweep()} ${this.valueX()} ${this.valueY()}`;\n    }\n    zeroRadians() {\n        if (this.min > 0 && this.max > 0)\n            return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);\n        else\n            return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n    }\n    valueRadians() {\n        return this.mapRange(this._value, this.min, this.max, this.minRadians, this.maxRadians);\n    }\n    minX() {\n        return this.midX + Math.cos(this.minRadians) * this.radius;\n    }\n    minY() {\n        return this.midY - Math.sin(this.minRadians) * this.radius;\n    }\n    maxX() {\n        return this.midX + Math.cos(this.maxRadians) * this.radius;\n    }\n    maxY() {\n        return this.midY - Math.sin(this.maxRadians) * this.radius;\n    }\n    zeroX() {\n        return this.midX + Math.cos(this.zeroRadians()) * this.radius;\n    }\n    zeroY() {\n        return this.midY - Math.sin(this.zeroRadians()) * this.radius;\n    }\n    valueX() {\n        return this.midX + Math.cos(this.valueRadians()) * this.radius;\n    }\n    valueY() {\n        return this.midY - Math.sin(this.valueRadians()) * this.radius;\n    }\n    largeArc() {\n        return Math.abs(this.zeroRadians() - this.valueRadians()) < Math.PI ? 0 : 1;\n    }\n    sweep() {\n        return this.valueRadians() > this.zeroRadians() ? 0 : 1;\n    }\n    valueToDisplay() {\n        return this.valueTemplate.replace('{value}', this._value.toString());\n    }\n    get _value() {\n        return this.value != null ? this.value : this.min;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Knob, deps: [{ token: DOCUMENT }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: Knob, selector: \"p-knob\", inputs: { styleClass: \"styleClass\", style: \"style\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\", tabindex: \"tabindex\", valueColor: \"valueColor\", rangeColor: \"rangeColor\", textColor: \"textColor\", valueTemplate: \"valueTemplate\", name: \"name\", size: \"size\", step: \"step\", min: \"min\", max: \"max\", strokeWidth: \"strokeWidth\", disabled: \"disabled\", showValue: \"showValue\", readonly: \"readonly\" }, outputs: { onChange: \"onChange\" }, host: { classAttribute: \"p-element\" }, providers: [KNOB_VALUE_ACCESSOR], ngImport: i0, template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" [attr.data-pc-name]=\"'knob'\" [attr.data-pc-section]=\"'root'\">\n            <svg\n                viewBox=\"0 0 100 100\"\n                role=\"slider\"\n                [style.width]=\"size + 'px'\"\n                [style.height]=\"size + 'px'\"\n                (click)=\"onClick($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (mousedown)=\"onMouseDown($event)\"\n                (mouseup)=\"onMouseUp($event)\"\n                (touchstart)=\"onTouchStart($event)\"\n                (touchend)=\"onTouchEnd($event)\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-valuenow]=\"_value\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.tabindex]=\"readonly || disabled ? -1 : tabindex\"\n                [attr.data-pc-section]=\"'svg'\"\n            >\n                <path [attr.d]=\"rangePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"rangeColor\" class=\"p-knob-range\"></path>\n                <path [attr.d]=\"valuePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"valueColor\" class=\"p-knob-value\"></path>\n                <text *ngIf=\"showValue\" [attr.x]=\"50\" [attr.y]=\"57\" text-anchor=\"middle\" [attr.fill]=\"textColor\" class=\"p-knob-text\" [attr.name]=\"name\">{{ valueToDisplay() }}</text>\n            </svg>\n        </div>\n    `, isInline: true, styles: [\"@keyframes dash-frame{to{stroke-dashoffset:0}}@layer primeng{.p-knob-range{fill:none;transition:stroke .1s ease-in}.p-knob-value{animation-name:dash-frame;animation-fill-mode:forwards;fill:none}.p-knob-text{font-size:1.3rem;text-align:center}}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Knob, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-knob', template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" [attr.data-pc-name]=\"'knob'\" [attr.data-pc-section]=\"'root'\">\n            <svg\n                viewBox=\"0 0 100 100\"\n                role=\"slider\"\n                [style.width]=\"size + 'px'\"\n                [style.height]=\"size + 'px'\"\n                (click)=\"onClick($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                (mousedown)=\"onMouseDown($event)\"\n                (mouseup)=\"onMouseUp($event)\"\n                (touchstart)=\"onTouchStart($event)\"\n                (touchend)=\"onTouchEnd($event)\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-valuenow]=\"_value\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.tabindex]=\"readonly || disabled ? -1 : tabindex\"\n                [attr.data-pc-section]=\"'svg'\"\n            >\n                <path [attr.d]=\"rangePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"rangeColor\" class=\"p-knob-range\"></path>\n                <path [attr.d]=\"valuePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"valueColor\" class=\"p-knob-value\"></path>\n                <text *ngIf=\"showValue\" [attr.x]=\"50\" [attr.y]=\"57\" text-anchor=\"middle\" [attr.fill]=\"textColor\" class=\"p-knob-text\" [attr.name]=\"name\">{{ valueToDisplay() }}</text>\n            </svg>\n        </div>\n    `, providers: [KNOB_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\"@keyframes dash-frame{to{stroke-dashoffset:0}}@layer primeng{.p-knob-range{fill:none;transition:stroke .1s ease-in}.p-knob-value{animation-name:dash-frame;animation-fill-mode:forwards;fill:none}.p-knob-text{font-size:1.3rem;text-align:center}}\\n\"] }]\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }], propDecorators: { styleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], valueColor: [{\n                type: Input\n            }], rangeColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueTemplate: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], showValue: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }] } });\nclass KnobModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: KnobModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: KnobModule, declarations: [Knob], imports: [CommonModule], exports: [Knob] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: KnobModule, imports: [CommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: KnobModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Knob],\n                    declarations: [Knob]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { KNOB_VALUE_ACCESSOR, Knob, KnobModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}