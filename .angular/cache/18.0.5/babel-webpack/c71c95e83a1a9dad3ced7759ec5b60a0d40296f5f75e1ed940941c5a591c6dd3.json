{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/database\";\nexport class ProductService {\n  constructor(db) {\n    this.db = db;\n    this.dbPath = '/products';\n    this.productRef = null;\n    this.productRef = db.list(this.dbPath);\n  }\n  getProducts() {\n    // return this.productRef.valueChanges();\n    return this.productRef.snapshotChanges().pipe(map(changes => changes.map(c => ({\n      key: c.payload.key,\n      ...c.payload.val()\n    }))));\n  }\n  addProduct(product) {\n    this.productRef.push(product);\n  }\n  updateProduct(key, value) {\n    this.productRef.update(key, value).catch(error => this.handleError(error));\n  }\n  handleError(error) {\n    console.log(error);\n  }\n  deleteProduct(key) {\n    this.productRef.remove(key);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.AngularFireDatabase));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","ProductService","constructor","db","dbPath","productRef","list","getProducts","snapshotChanges","pipe","changes","c","key","payload","val","addProduct","product","push","updateProduct","value","update","catch","error","handleError","console","log","deleteProduct","remove","_","i0","ɵɵinject","i1","AngularFireDatabase","_2","factory","ɵfac","providedIn"],"sources":["/workspace/angular-sakai/src/app/demo/components/pages/product/services/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/compat/database';\nimport { map, Observable } from 'rxjs';\nimport { Product } from '../models/product.model';\n\nexport interface Item {\n    key?: string;\n    name: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n    private dbPath = '/products';\n    productRef: AngularFireList<Product> = null;\n\n    constructor(private db: AngularFireDatabase) {\n        this.productRef = db.list(this.dbPath);\n    }\n\n    getProducts(): Observable<Product[]> {\n        // return this.productRef.valueChanges();\n        return this.productRef.snapshotChanges().pipe(\n            map(changes =>\n                changes.map(c => ({ key: c.payload.key, ...c.payload.val() }))\n            )\n        );\n    }\n\n    addProduct(product: Product): void {\n        this.productRef.push(product);\n    }\n\n    updateProduct(key: string, value: any): void {\n        this.productRef.update(key, value).catch(error => this.handleError(error));\n    }\n\n    private handleError(error) {\n        console.log(error);\n    }\n\n    deleteProduct(key: string): void {\n        this.productRef.remove(key);\n    }\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAoB,MAAM;;;AAWtC,OAAM,MAAOC,cAAc;EAIvBC,YAAoBC,EAAuB;IAAvB,KAAAA,EAAE,GAAFA,EAAE;IAHd,KAAAC,MAAM,GAAG,WAAW;IAC5B,KAAAC,UAAU,GAA6B,IAAI;IAGvC,IAAI,CAACA,UAAU,GAAGF,EAAE,CAACG,IAAI,CAAC,IAAI,CAACF,MAAM,CAAC;EAC1C;EAEAG,WAAWA,CAAA;IACP;IACA,OAAO,IAAI,CAACF,UAAU,CAACG,eAAe,EAAE,CAACC,IAAI,CACzCT,GAAG,CAACU,OAAO,IACPA,OAAO,CAACV,GAAG,CAACW,CAAC,KAAK;MAAEC,GAAG,EAAED,CAAC,CAACE,OAAO,CAACD,GAAG;MAAE,GAAGD,CAAC,CAACE,OAAO,CAACC,GAAG;IAAE,CAAE,CAAC,CAAC,CACjE,CACJ;EACL;EAEAC,UAAUA,CAACC,OAAgB;IACvB,IAAI,CAACX,UAAU,CAACY,IAAI,CAACD,OAAO,CAAC;EACjC;EAEAE,aAAaA,CAACN,GAAW,EAAEO,KAAU;IACjC,IAAI,CAACd,UAAU,CAACe,MAAM,CAACR,GAAG,EAAEO,KAAK,CAAC,CAACE,KAAK,CAACC,KAAK,IAAI,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC;EAC9E;EAEQC,WAAWA,CAACD,KAAK;IACrBE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EACtB;EAEAI,aAAaA,CAACd,GAAW;IACrB,IAAI,CAACP,UAAU,CAACsB,MAAM,CAACf,GAAG,CAAC;EAC/B;EAAC,QAAAgB,CAAA,G;qBA/BQ3B,cAAc,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,mBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdhC,cAAc;IAAAiC,OAAA,EAAdjC,cAAc,CAAAkC,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}